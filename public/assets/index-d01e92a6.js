(function(){const t=document.createElement("link").relList;if(t&&t.supports&&t.supports("modulepreload"))return;for(const s of document.querySelectorAll('link[rel="modulepreload"]'))i(s);new MutationObserver(s=>{for(const n of s)if(n.type==="childList")for(const r of n.addedNodes)r.tagName==="LINK"&&r.rel==="modulepreload"&&i(r)}).observe(document,{childList:!0,subtree:!0});function e(s){const n={};return s.integrity&&(n.integrity=s.integrity),s.referrerPolicy&&(n.referrerPolicy=s.referrerPolicy),s.crossOrigin==="use-credentials"?n.credentials="include":s.crossOrigin==="anonymous"?n.credentials="omit":n.credentials="same-origin",n}function i(s){if(s.ep)return;s.ep=!0;const n=e(s);fetch(s.href,n)}})();const dt={};function Mi(d,t,e){dt[d]=()=>{t()&&(dt[d]=e)}}const Ts={schema:{imageTargetFound:{default:!1,type:"boolean"},imageTargetPresent:{default:!1,type:"boolean"},component:{type:"string"}},init(){this.animationFrameId=null,this.el.sceneEl.addEventListener("arReady",()=>{const t=()=>{var s,n;if(Object.keys(dt).length===0){this.animationFrameId=requestAnimationFrame(t);return}const e=document.getElementById("ar-effect-canvas");e.getContext("2d").clearRect(0,0,e.width,e.height),(s=dt.cardFrontEffect)==null||s.call(dt),(n=dt.cardBackEffect)==null||n.call(dt),this.animationFrameId=requestAnimationFrame(t)};this.animationFrameId=requestAnimationFrame(t)},{once:!0})},remove(){this.animationFrameId&&(cancelAnimationFrame(this.animationFrameId),this.animationFrameId=null)},update(d){if(!d)return;const t=AFRAME.utils.diff(this.data,d),e=document.querySelector("a-scene");"imageTargetFound"in t&&this.data.imageTargetFound&&(this.data.component==="card-front"&&Mi("cardFrontEffect",()=>{}),this.data.component==="card-back"&&(e.setAttribute("ui-controller",{cardBackDetected:!0}),Mi("cardBackEffect",()=>{},()=>{}))),"imageTargetPresent"in t&&(this.el.object3D.visible=this.data.imageTargetPresent,this.data.imageTargetPresent?(this.data.component,this.data.component):(this.data.component,this.data.component))}};/**
 * @license
 * Copyright 2010-2023 Three.js Authors
 * SPDX-License-Identifier: MIT
 */const cs="160",li=0,us=1,fi=0,bi=1,wi=100,_i=204,zi=205,Si=3,Es=0,vs=0,ds=300,Ai=301,Fi=302,Cs=306,Ti=1e3,Ut=1001,Ei=1002,Ie=1003,mt=1006,fs=1008,Rs=1009,Bs=1014,ve=1015,$t=1016,ks=1020,ms=1023,Le=1026,vi=1027,Is=3e3,Ce=3001,Zt="",Z="srgb",Qt="srgb-linear",Ds="display-p3",ps="display-p3-linear",ci="linear",Ci="srgb",Ri="rec709",Bi="p3",Tt=7680,ki=519,Ps=515,Ii=35044,Jt=2e3,Di=2001;class Kt{addEventListener(t,e){this._listeners===void 0&&(this._listeners={});const i=this._listeners;i[t]===void 0&&(i[t]=[]),i[t].indexOf(e)===-1&&i[t].push(e)}hasEventListener(t,e){if(this._listeners===void 0)return!1;const i=this._listeners;return i[t]!==void 0&&i[t].indexOf(e)!==-1}removeEventListener(t,e){if(this._listeners===void 0)return;const s=this._listeners[t];if(s!==void 0){const n=s.indexOf(e);n!==-1&&s.splice(n,1)}}dispatchEvent(t){if(this._listeners===void 0)return;const i=this._listeners[t.type];if(i!==void 0){t.target=this;const s=i.slice(0);for(let n=0,r=s.length;n<r;n++)s[n].call(this,t);t.target=null}}}const q=["00","01","02","03","04","05","06","07","08","09","0a","0b","0c","0d","0e","0f","10","11","12","13","14","15","16","17","18","19","1a","1b","1c","1d","1e","1f","20","21","22","23","24","25","26","27","28","29","2a","2b","2c","2d","2e","2f","30","31","32","33","34","35","36","37","38","39","3a","3b","3c","3d","3e","3f","40","41","42","43","44","45","46","47","48","49","4a","4b","4c","4d","4e","4f","50","51","52","53","54","55","56","57","58","59","5a","5b","5c","5d","5e","5f","60","61","62","63","64","65","66","67","68","69","6a","6b","6c","6d","6e","6f","70","71","72","73","74","75","76","77","78","79","7a","7b","7c","7d","7e","7f","80","81","82","83","84","85","86","87","88","89","8a","8b","8c","8d","8e","8f","90","91","92","93","94","95","96","97","98","99","9a","9b","9c","9d","9e","9f","a0","a1","a2","a3","a4","a5","a6","a7","a8","a9","aa","ab","ac","ad","ae","af","b0","b1","b2","b3","b4","b5","b6","b7","b8","b9","ba","bb","bc","bd","be","bf","c0","c1","c2","c3","c4","c5","c6","c7","c8","c9","ca","cb","cc","cd","ce","cf","d0","d1","d2","d3","d4","d5","d6","d7","d8","d9","da","db","dc","dd","de","df","e0","e1","e2","e3","e4","e5","e6","e7","e8","e9","ea","eb","ec","ed","ee","ef","f0","f1","f2","f3","f4","f5","f6","f7","f8","f9","fa","fb","fc","fd","fe","ff"],qe=Math.PI/180,Pi=180/Math.PI;function te(){const d=Math.random()*4294967295|0,t=Math.random()*4294967295|0,e=Math.random()*4294967295|0,i=Math.random()*4294967295|0;return(q[d&255]+q[d>>8&255]+q[d>>16&255]+q[d>>24&255]+"-"+q[t&255]+q[t>>8&255]+"-"+q[t>>16&15|64]+q[t>>24&255]+"-"+q[e&63|128]+q[e>>8&255]+"-"+q[e>>16&255]+q[e>>24&255]+q[i&255]+q[i>>8&255]+q[i>>16&255]+q[i>>24&255]).toLowerCase()}function N(d,t,e){return Math.max(t,Math.min(e,d))}function Os(d,t){return(d%t+t)%t}function Ve(d,t,e){return(1-e)*d+e*t}function Ht(d,t){switch(t.constructor){case Float32Array:return d;case Uint32Array:return d/4294967295;case Uint16Array:return d/65535;case Uint8Array:return d/255;case Int32Array:return Math.max(d/2147483647,-1);case Int16Array:return Math.max(d/32767,-1);case Int8Array:return Math.max(d/127,-1);default:throw new Error("Invalid component type.")}}function G(d,t){switch(t.constructor){case Float32Array:return d;case Uint32Array:return Math.round(d*4294967295);case Uint16Array:return Math.round(d*65535);case Uint8Array:return Math.round(d*255);case Int32Array:return Math.round(d*2147483647);case Int16Array:return Math.round(d*32767);case Int8Array:return Math.round(d*127);default:throw new Error("Invalid component type.")}}class W{constructor(t=0,e=0){W.prototype.isVector2=!0,this.x=t,this.y=e}get width(){return this.x}set width(t){this.x=t}get height(){return this.y}set height(t){this.y=t}set(t,e){return this.x=t,this.y=e,this}setScalar(t){return this.x=t,this.y=t,this}setX(t){return this.x=t,this}setY(t){return this.y=t,this}setComponent(t,e){switch(t){case 0:this.x=e;break;case 1:this.y=e;break;default:throw new Error("index is out of range: "+t)}return this}getComponent(t){switch(t){case 0:return this.x;case 1:return this.y;default:throw new Error("index is out of range: "+t)}}clone(){return new this.constructor(this.x,this.y)}copy(t){return this.x=t.x,this.y=t.y,this}add(t){return this.x+=t.x,this.y+=t.y,this}addScalar(t){return this.x+=t,this.y+=t,this}addVectors(t,e){return this.x=t.x+e.x,this.y=t.y+e.y,this}addScaledVector(t,e){return this.x+=t.x*e,this.y+=t.y*e,this}sub(t){return this.x-=t.x,this.y-=t.y,this}subScalar(t){return this.x-=t,this.y-=t,this}subVectors(t,e){return this.x=t.x-e.x,this.y=t.y-e.y,this}multiply(t){return this.x*=t.x,this.y*=t.y,this}multiplyScalar(t){return this.x*=t,this.y*=t,this}divide(t){return this.x/=t.x,this.y/=t.y,this}divideScalar(t){return this.multiplyScalar(1/t)}applyMatrix3(t){const e=this.x,i=this.y,s=t.elements;return this.x=s[0]*e+s[3]*i+s[6],this.y=s[1]*e+s[4]*i+s[7],this}min(t){return this.x=Math.min(this.x,t.x),this.y=Math.min(this.y,t.y),this}max(t){return this.x=Math.max(this.x,t.x),this.y=Math.max(this.y,t.y),this}clamp(t,e){return this.x=Math.max(t.x,Math.min(e.x,this.x)),this.y=Math.max(t.y,Math.min(e.y,this.y)),this}clampScalar(t,e){return this.x=Math.max(t,Math.min(e,this.x)),this.y=Math.max(t,Math.min(e,this.y)),this}clampLength(t,e){const i=this.length();return this.divideScalar(i||1).multiplyScalar(Math.max(t,Math.min(e,i)))}floor(){return this.x=Math.floor(this.x),this.y=Math.floor(this.y),this}ceil(){return this.x=Math.ceil(this.x),this.y=Math.ceil(this.y),this}round(){return this.x=Math.round(this.x),this.y=Math.round(this.y),this}roundToZero(){return this.x=Math.trunc(this.x),this.y=Math.trunc(this.y),this}negate(){return this.x=-this.x,this.y=-this.y,this}dot(t){return this.x*t.x+this.y*t.y}cross(t){return this.x*t.y-this.y*t.x}lengthSq(){return this.x*this.x+this.y*this.y}length(){return Math.sqrt(this.x*this.x+this.y*this.y)}manhattanLength(){return Math.abs(this.x)+Math.abs(this.y)}normalize(){return this.divideScalar(this.length()||1)}angle(){return Math.atan2(-this.y,-this.x)+Math.PI}angleTo(t){const e=Math.sqrt(this.lengthSq()*t.lengthSq());if(e===0)return Math.PI/2;const i=this.dot(t)/e;return Math.acos(N(i,-1,1))}distanceTo(t){return Math.sqrt(this.distanceToSquared(t))}distanceToSquared(t){const e=this.x-t.x,i=this.y-t.y;return e*e+i*i}manhattanDistanceTo(t){return Math.abs(this.x-t.x)+Math.abs(this.y-t.y)}setLength(t){return this.normalize().multiplyScalar(t)}lerp(t,e){return this.x+=(t.x-this.x)*e,this.y+=(t.y-this.y)*e,this}lerpVectors(t,e,i){return this.x=t.x+(e.x-t.x)*i,this.y=t.y+(e.y-t.y)*i,this}equals(t){return t.x===this.x&&t.y===this.y}fromArray(t,e=0){return this.x=t[e],this.y=t[e+1],this}toArray(t=[],e=0){return t[e]=this.x,t[e+1]=this.y,t}fromBufferAttribute(t,e){return this.x=t.getX(e),this.y=t.getY(e),this}rotateAround(t,e){const i=Math.cos(e),s=Math.sin(e),n=this.x-t.x,r=this.y-t.y;return this.x=n*i-r*s+t.x,this.y=n*s+r*i+t.y,this}random(){return this.x=Math.random(),this.y=Math.random(),this}*[Symbol.iterator](){yield this.x,yield this.y}}class wt{constructor(t,e,i,s,n,r,h,a,o){wt.prototype.isMatrix3=!0,this.elements=[1,0,0,0,1,0,0,0,1],t!==void 0&&this.set(t,e,i,s,n,r,h,a,o)}set(t,e,i,s,n,r,h,a,o){const l=this.elements;return l[0]=t,l[1]=s,l[2]=h,l[3]=e,l[4]=n,l[5]=a,l[6]=i,l[7]=r,l[8]=o,this}identity(){return this.set(1,0,0,0,1,0,0,0,1),this}copy(t){const e=this.elements,i=t.elements;return e[0]=i[0],e[1]=i[1],e[2]=i[2],e[3]=i[3],e[4]=i[4],e[5]=i[5],e[6]=i[6],e[7]=i[7],e[8]=i[8],this}extractBasis(t,e,i){return t.setFromMatrix3Column(this,0),e.setFromMatrix3Column(this,1),i.setFromMatrix3Column(this,2),this}setFromMatrix4(t){const e=t.elements;return this.set(e[0],e[4],e[8],e[1],e[5],e[9],e[2],e[6],e[10]),this}multiply(t){return this.multiplyMatrices(this,t)}premultiply(t){return this.multiplyMatrices(t,this)}multiplyMatrices(t,e){const i=t.elements,s=e.elements,n=this.elements,r=i[0],h=i[3],a=i[6],o=i[1],l=i[4],c=i[7],u=i[2],f=i[5],m=i[8],p=s[0],y=s[3],g=s[6],z=s[1],F=s[4],w=s[7],S=s[2],A=s[5],b=s[8];return n[0]=r*p+h*z+a*S,n[3]=r*y+h*F+a*A,n[6]=r*g+h*w+a*b,n[1]=o*p+l*z+c*S,n[4]=o*y+l*F+c*A,n[7]=o*g+l*w+c*b,n[2]=u*p+f*z+m*S,n[5]=u*y+f*F+m*A,n[8]=u*g+f*w+m*b,this}multiplyScalar(t){const e=this.elements;return e[0]*=t,e[3]*=t,e[6]*=t,e[1]*=t,e[4]*=t,e[7]*=t,e[2]*=t,e[5]*=t,e[8]*=t,this}determinant(){const t=this.elements,e=t[0],i=t[1],s=t[2],n=t[3],r=t[4],h=t[5],a=t[6],o=t[7],l=t[8];return e*r*l-e*h*o-i*n*l+i*h*a+s*n*o-s*r*a}invert(){const t=this.elements,e=t[0],i=t[1],s=t[2],n=t[3],r=t[4],h=t[5],a=t[6],o=t[7],l=t[8],c=l*r-h*o,u=h*a-l*n,f=o*n-r*a,m=e*c+i*u+s*f;if(m===0)return this.set(0,0,0,0,0,0,0,0,0);const p=1/m;return t[0]=c*p,t[1]=(s*o-l*i)*p,t[2]=(h*i-s*r)*p,t[3]=u*p,t[4]=(l*e-s*a)*p,t[5]=(s*n-h*e)*p,t[6]=f*p,t[7]=(i*a-o*e)*p,t[8]=(r*e-i*n)*p,this}transpose(){let t;const e=this.elements;return t=e[1],e[1]=e[3],e[3]=t,t=e[2],e[2]=e[6],e[6]=t,t=e[5],e[5]=e[7],e[7]=t,this}getNormalMatrix(t){return this.setFromMatrix4(t).invert().transpose()}transposeIntoArray(t){const e=this.elements;return t[0]=e[0],t[1]=e[3],t[2]=e[6],t[3]=e[1],t[4]=e[4],t[5]=e[7],t[6]=e[2],t[7]=e[5],t[8]=e[8],this}setUvTransform(t,e,i,s,n,r,h){const a=Math.cos(n),o=Math.sin(n);return this.set(i*a,i*o,-i*(a*r+o*h)+r+t,-s*o,s*a,-s*(-o*r+a*h)+h+e,0,0,1),this}scale(t,e){return this.premultiply(Ue.makeScale(t,e)),this}rotate(t){return this.premultiply(Ue.makeRotation(-t)),this}translate(t,e){return this.premultiply(Ue.makeTranslation(t,e)),this}makeTranslation(t,e){return t.isVector2?this.set(1,0,t.x,0,1,t.y,0,0,1):this.set(1,0,t,0,1,e,0,0,1),this}makeRotation(t){const e=Math.cos(t),i=Math.sin(t);return this.set(e,-i,0,i,e,0,0,0,1),this}makeScale(t,e){return this.set(t,0,0,0,e,0,0,0,1),this}equals(t){const e=this.elements,i=t.elements;for(let s=0;s<9;s++)if(e[s]!==i[s])return!1;return!0}fromArray(t,e=0){for(let i=0;i<9;i++)this.elements[i]=t[i+e];return this}toArray(t=[],e=0){const i=this.elements;return t[e]=i[0],t[e+1]=i[1],t[e+2]=i[2],t[e+3]=i[3],t[e+4]=i[4],t[e+5]=i[5],t[e+6]=i[6],t[e+7]=i[7],t[e+8]=i[8],t}clone(){return new this.constructor().fromArray(this.elements)}}const Ue=new wt;function Ls(d){for(let t=d.length-1;t>=0;--t)if(d[t]>=65535)return!0;return!1}function Oi(d){return document.createElementNS("http://www.w3.org/1999/xhtml",d)}const Li={};function Re(d){d in Li||(Li[d]=!0,console.warn(d))}const qi=new wt().set(.8224621,.177538,0,.0331941,.9668058,0,.0170827,.0723974,.9105199),Vi=new wt().set(1.2249401,-.2249404,0,-.0420569,1.0420571,0,-.0196376,-.0786361,1.0982735),ae={[Qt]:{transfer:ci,primaries:Ri,toReference:d=>d,fromReference:d=>d},[Z]:{transfer:Ci,primaries:Ri,toReference:d=>d.convertSRGBToLinear(),fromReference:d=>d.convertLinearToSRGB()},[ps]:{transfer:ci,primaries:Bi,toReference:d=>d.applyMatrix3(Vi),fromReference:d=>d.applyMatrix3(qi)},[Ds]:{transfer:Ci,primaries:Bi,toReference:d=>d.convertSRGBToLinear().applyMatrix3(Vi),fromReference:d=>d.applyMatrix3(qi).convertLinearToSRGB()}},qs=new Set([Qt,ps]),K={enabled:!0,_workingColorSpace:Qt,get workingColorSpace(){return this._workingColorSpace},set workingColorSpace(d){if(!qs.has(d))throw new Error(`Unsupported working color space, "${d}".`);this._workingColorSpace=d},convert:function(d,t,e){if(this.enabled===!1||t===e||!t||!e)return d;const i=ae[t].toReference,s=ae[e].fromReference;return s(i(d))},fromWorkingColorSpace:function(d,t){return this.convert(d,this._workingColorSpace,t)},toWorkingColorSpace:function(d,t){return this.convert(d,t,this._workingColorSpace)},getPrimaries:function(d){return ae[d].primaries},getTransfer:function(d){return d===Zt?ci:ae[d].transfer}};function Wt(d){return d<.04045?d*.0773993808:Math.pow(d*.9478672986+.0521327014,2.4)}function Ne(d){return d<.0031308?d*12.92:1.055*Math.pow(d,.41666)-.055}let Et;class Vs{static getDataURL(t){if(/^data:/i.test(t.src)||typeof HTMLCanvasElement>"u")return t.src;let e;if(t instanceof HTMLCanvasElement)e=t;else{Et===void 0&&(Et=Oi("canvas")),Et.width=t.width,Et.height=t.height;const i=Et.getContext("2d");t instanceof ImageData?i.putImageData(t,0,0):i.drawImage(t,0,0,t.width,t.height),e=Et}return e.width>2048||e.height>2048?(console.warn("THREE.ImageUtils.getDataURL: Image converted to jpg for performance reasons",t),e.toDataURL("image/jpeg",.6)):e.toDataURL("image/png")}static sRGBToLinear(t){if(typeof HTMLImageElement<"u"&&t instanceof HTMLImageElement||typeof HTMLCanvasElement<"u"&&t instanceof HTMLCanvasElement||typeof ImageBitmap<"u"&&t instanceof ImageBitmap){const e=Oi("canvas");e.width=t.width,e.height=t.height;const i=e.getContext("2d");i.drawImage(t,0,0,t.width,t.height);const s=i.getImageData(0,0,t.width,t.height),n=s.data;for(let r=0;r<n.length;r++)n[r]=Wt(n[r]/255)*255;return i.putImageData(s,0,0),e}else if(t.data){const e=t.data.slice(0);for(let i=0;i<e.length;i++)e instanceof Uint8Array||e instanceof Uint8ClampedArray?e[i]=Math.floor(Wt(e[i]/255)*255):e[i]=Wt(e[i]);return{data:e,width:t.width,height:t.height}}else return console.warn("THREE.ImageUtils.sRGBToLinear(): Unsupported image type. No color space conversion applied."),t}}let Us=0;class ys{constructor(t=null){this.isSource=!0,Object.defineProperty(this,"id",{value:Us++}),this.uuid=te(),this.data=t,this.version=0}set needsUpdate(t){t===!0&&this.version++}toJSON(t){const e=t===void 0||typeof t=="string";if(!e&&t.images[this.uuid]!==void 0)return t.images[this.uuid];const i={uuid:this.uuid,url:""},s=this.data;if(s!==null){let n;if(Array.isArray(s)){n=[];for(let r=0,h=s.length;r<h;r++)s[r].isDataTexture?n.push(We(s[r].image)):n.push(We(s[r]))}else n=We(s);i.url=n}return e||(t.images[this.uuid]=i),i}}function We(d){return typeof HTMLImageElement<"u"&&d instanceof HTMLImageElement||typeof HTMLCanvasElement<"u"&&d instanceof HTMLCanvasElement||typeof ImageBitmap<"u"&&d instanceof ImageBitmap?Vs.getDataURL(d):d.data?{data:Array.from(d.data),width:d.width,height:d.height,type:d.data.constructor.name}:(console.warn("THREE.Texture: Unable to serialize Texture."),{})}let Ns=0;class nt extends Kt{constructor(t=nt.DEFAULT_IMAGE,e=nt.DEFAULT_MAPPING,i=Ut,s=Ut,n=mt,r=fs,h=ms,a=Rs,o=nt.DEFAULT_ANISOTROPY,l=Zt){super(),this.isTexture=!0,Object.defineProperty(this,"id",{value:Ns++}),this.uuid=te(),this.name="",this.source=new ys(t),this.mipmaps=[],this.mapping=e,this.channel=0,this.wrapS=i,this.wrapT=s,this.magFilter=n,this.minFilter=r,this.anisotropy=o,this.format=h,this.internalFormat=null,this.type=a,this.offset=new W(0,0),this.repeat=new W(1,1),this.center=new W(0,0),this.rotation=0,this.matrixAutoUpdate=!0,this.matrix=new wt,this.generateMipmaps=!0,this.premultiplyAlpha=!1,this.flipY=!0,this.unpackAlignment=4,typeof l=="string"?this.colorSpace=l:(Re("THREE.Texture: Property .encoding has been replaced by .colorSpace."),this.colorSpace=l===Ce?Z:Zt),this.userData={},this.version=0,this.onUpdate=null,this.isRenderTargetTexture=!1,this.needsPMREMUpdate=!1}get image(){return this.source.data}set image(t=null){this.source.data=t}updateMatrix(){this.matrix.setUvTransform(this.offset.x,this.offset.y,this.repeat.x,this.repeat.y,this.rotation,this.center.x,this.center.y)}clone(){return new this.constructor().copy(this)}copy(t){return this.name=t.name,this.source=t.source,this.mipmaps=t.mipmaps.slice(0),this.mapping=t.mapping,this.channel=t.channel,this.wrapS=t.wrapS,this.wrapT=t.wrapT,this.magFilter=t.magFilter,this.minFilter=t.minFilter,this.anisotropy=t.anisotropy,this.format=t.format,this.internalFormat=t.internalFormat,this.type=t.type,this.offset.copy(t.offset),this.repeat.copy(t.repeat),this.center.copy(t.center),this.rotation=t.rotation,this.matrixAutoUpdate=t.matrixAutoUpdate,this.matrix.copy(t.matrix),this.generateMipmaps=t.generateMipmaps,this.premultiplyAlpha=t.premultiplyAlpha,this.flipY=t.flipY,this.unpackAlignment=t.unpackAlignment,this.colorSpace=t.colorSpace,this.userData=JSON.parse(JSON.stringify(t.userData)),this.needsUpdate=!0,this}toJSON(t){const e=t===void 0||typeof t=="string";if(!e&&t.textures[this.uuid]!==void 0)return t.textures[this.uuid];const i={metadata:{version:4.6,type:"Texture",generator:"Texture.toJSON"},uuid:this.uuid,name:this.name,image:this.source.toJSON(t).uuid,mapping:this.mapping,channel:this.channel,repeat:[this.repeat.x,this.repeat.y],offset:[this.offset.x,this.offset.y],center:[this.center.x,this.center.y],rotation:this.rotation,wrap:[this.wrapS,this.wrapT],format:this.format,internalFormat:this.internalFormat,type:this.type,colorSpace:this.colorSpace,minFilter:this.minFilter,magFilter:this.magFilter,anisotropy:this.anisotropy,flipY:this.flipY,generateMipmaps:this.generateMipmaps,premultiplyAlpha:this.premultiplyAlpha,unpackAlignment:this.unpackAlignment};return Object.keys(this.userData).length>0&&(i.userData=this.userData),e||(t.textures[this.uuid]=i),i}dispose(){this.dispatchEvent({type:"dispose"})}transformUv(t){if(this.mapping!==ds)return t;if(t.applyMatrix3(this.matrix),t.x<0||t.x>1)switch(this.wrapS){case Ti:t.x=t.x-Math.floor(t.x);break;case Ut:t.x=t.x<0?0:1;break;case Ei:Math.abs(Math.floor(t.x)%2)===1?t.x=Math.ceil(t.x)-t.x:t.x=t.x-Math.floor(t.x);break}if(t.y<0||t.y>1)switch(this.wrapT){case Ti:t.y=t.y-Math.floor(t.y);break;case Ut:t.y=t.y<0?0:1;break;case Ei:Math.abs(Math.floor(t.y)%2)===1?t.y=Math.ceil(t.y)-t.y:t.y=t.y-Math.floor(t.y);break}return this.flipY&&(t.y=1-t.y),t}set needsUpdate(t){t===!0&&(this.version++,this.source.needsUpdate=!0)}get encoding(){return Re("THREE.Texture: Property .encoding has been replaced by .colorSpace."),this.colorSpace===Z?Ce:Is}set encoding(t){Re("THREE.Texture: Property .encoding has been replaced by .colorSpace."),this.colorSpace=t===Ce?Z:Zt}}nt.DEFAULT_IMAGE=null;nt.DEFAULT_MAPPING=ds;nt.DEFAULT_ANISOTROPY=1;class De{constructor(t=0,e=0,i=0,s=1){De.prototype.isVector4=!0,this.x=t,this.y=e,this.z=i,this.w=s}get width(){return this.z}set width(t){this.z=t}get height(){return this.w}set height(t){this.w=t}set(t,e,i,s){return this.x=t,this.y=e,this.z=i,this.w=s,this}setScalar(t){return this.x=t,this.y=t,this.z=t,this.w=t,this}setX(t){return this.x=t,this}setY(t){return this.y=t,this}setZ(t){return this.z=t,this}setW(t){return this.w=t,this}setComponent(t,e){switch(t){case 0:this.x=e;break;case 1:this.y=e;break;case 2:this.z=e;break;case 3:this.w=e;break;default:throw new Error("index is out of range: "+t)}return this}getComponent(t){switch(t){case 0:return this.x;case 1:return this.y;case 2:return this.z;case 3:return this.w;default:throw new Error("index is out of range: "+t)}}clone(){return new this.constructor(this.x,this.y,this.z,this.w)}copy(t){return this.x=t.x,this.y=t.y,this.z=t.z,this.w=t.w!==void 0?t.w:1,this}add(t){return this.x+=t.x,this.y+=t.y,this.z+=t.z,this.w+=t.w,this}addScalar(t){return this.x+=t,this.y+=t,this.z+=t,this.w+=t,this}addVectors(t,e){return this.x=t.x+e.x,this.y=t.y+e.y,this.z=t.z+e.z,this.w=t.w+e.w,this}addScaledVector(t,e){return this.x+=t.x*e,this.y+=t.y*e,this.z+=t.z*e,this.w+=t.w*e,this}sub(t){return this.x-=t.x,this.y-=t.y,this.z-=t.z,this.w-=t.w,this}subScalar(t){return this.x-=t,this.y-=t,this.z-=t,this.w-=t,this}subVectors(t,e){return this.x=t.x-e.x,this.y=t.y-e.y,this.z=t.z-e.z,this.w=t.w-e.w,this}multiply(t){return this.x*=t.x,this.y*=t.y,this.z*=t.z,this.w*=t.w,this}multiplyScalar(t){return this.x*=t,this.y*=t,this.z*=t,this.w*=t,this}applyMatrix4(t){const e=this.x,i=this.y,s=this.z,n=this.w,r=t.elements;return this.x=r[0]*e+r[4]*i+r[8]*s+r[12]*n,this.y=r[1]*e+r[5]*i+r[9]*s+r[13]*n,this.z=r[2]*e+r[6]*i+r[10]*s+r[14]*n,this.w=r[3]*e+r[7]*i+r[11]*s+r[15]*n,this}divideScalar(t){return this.multiplyScalar(1/t)}setAxisAngleFromQuaternion(t){this.w=2*Math.acos(t.w);const e=Math.sqrt(1-t.w*t.w);return e<1e-4?(this.x=1,this.y=0,this.z=0):(this.x=t.x/e,this.y=t.y/e,this.z=t.z/e),this}setAxisAngleFromRotationMatrix(t){let e,i,s,n;const a=t.elements,o=a[0],l=a[4],c=a[8],u=a[1],f=a[5],m=a[9],p=a[2],y=a[6],g=a[10];if(Math.abs(l-u)<.01&&Math.abs(c-p)<.01&&Math.abs(m-y)<.01){if(Math.abs(l+u)<.1&&Math.abs(c+p)<.1&&Math.abs(m+y)<.1&&Math.abs(o+f+g-3)<.1)return this.set(1,0,0,0),this;e=Math.PI;const F=(o+1)/2,w=(f+1)/2,S=(g+1)/2,A=(l+u)/4,b=(c+p)/4,M=(m+y)/4;return F>w&&F>S?F<.01?(i=0,s=.707106781,n=.707106781):(i=Math.sqrt(F),s=A/i,n=b/i):w>S?w<.01?(i=.707106781,s=0,n=.707106781):(s=Math.sqrt(w),i=A/s,n=M/s):S<.01?(i=.707106781,s=.707106781,n=0):(n=Math.sqrt(S),i=b/n,s=M/n),this.set(i,s,n,e),this}let z=Math.sqrt((y-m)*(y-m)+(c-p)*(c-p)+(u-l)*(u-l));return Math.abs(z)<.001&&(z=1),this.x=(y-m)/z,this.y=(c-p)/z,this.z=(u-l)/z,this.w=Math.acos((o+f+g-1)/2),this}min(t){return this.x=Math.min(this.x,t.x),this.y=Math.min(this.y,t.y),this.z=Math.min(this.z,t.z),this.w=Math.min(this.w,t.w),this}max(t){return this.x=Math.max(this.x,t.x),this.y=Math.max(this.y,t.y),this.z=Math.max(this.z,t.z),this.w=Math.max(this.w,t.w),this}clamp(t,e){return this.x=Math.max(t.x,Math.min(e.x,this.x)),this.y=Math.max(t.y,Math.min(e.y,this.y)),this.z=Math.max(t.z,Math.min(e.z,this.z)),this.w=Math.max(t.w,Math.min(e.w,this.w)),this}clampScalar(t,e){return this.x=Math.max(t,Math.min(e,this.x)),this.y=Math.max(t,Math.min(e,this.y)),this.z=Math.max(t,Math.min(e,this.z)),this.w=Math.max(t,Math.min(e,this.w)),this}clampLength(t,e){const i=this.length();return this.divideScalar(i||1).multiplyScalar(Math.max(t,Math.min(e,i)))}floor(){return this.x=Math.floor(this.x),this.y=Math.floor(this.y),this.z=Math.floor(this.z),this.w=Math.floor(this.w),this}ceil(){return this.x=Math.ceil(this.x),this.y=Math.ceil(this.y),this.z=Math.ceil(this.z),this.w=Math.ceil(this.w),this}round(){return this.x=Math.round(this.x),this.y=Math.round(this.y),this.z=Math.round(this.z),this.w=Math.round(this.w),this}roundToZero(){return this.x=Math.trunc(this.x),this.y=Math.trunc(this.y),this.z=Math.trunc(this.z),this.w=Math.trunc(this.w),this}negate(){return this.x=-this.x,this.y=-this.y,this.z=-this.z,this.w=-this.w,this}dot(t){return this.x*t.x+this.y*t.y+this.z*t.z+this.w*t.w}lengthSq(){return this.x*this.x+this.y*this.y+this.z*this.z+this.w*this.w}length(){return Math.sqrt(this.x*this.x+this.y*this.y+this.z*this.z+this.w*this.w)}manhattanLength(){return Math.abs(this.x)+Math.abs(this.y)+Math.abs(this.z)+Math.abs(this.w)}normalize(){return this.divideScalar(this.length()||1)}setLength(t){return this.normalize().multiplyScalar(t)}lerp(t,e){return this.x+=(t.x-this.x)*e,this.y+=(t.y-this.y)*e,this.z+=(t.z-this.z)*e,this.w+=(t.w-this.w)*e,this}lerpVectors(t,e,i){return this.x=t.x+(e.x-t.x)*i,this.y=t.y+(e.y-t.y)*i,this.z=t.z+(e.z-t.z)*i,this.w=t.w+(e.w-t.w)*i,this}equals(t){return t.x===this.x&&t.y===this.y&&t.z===this.z&&t.w===this.w}fromArray(t,e=0){return this.x=t[e],this.y=t[e+1],this.z=t[e+2],this.w=t[e+3],this}toArray(t=[],e=0){return t[e]=this.x,t[e+1]=this.y,t[e+2]=this.z,t[e+3]=this.w,t}fromBufferAttribute(t,e){return this.x=t.getX(e),this.y=t.getY(e),this.z=t.getZ(e),this.w=t.getW(e),this}random(){return this.x=Math.random(),this.y=Math.random(),this.z=Math.random(),this.w=Math.random(),this}*[Symbol.iterator](){yield this.x,yield this.y,yield this.z,yield this.w}}class Ws extends Kt{constructor(t=1,e=1,i={}){super(),this.isRenderTarget=!0,this.width=t,this.height=e,this.depth=1,this.scissor=new De(0,0,t,e),this.scissorTest=!1,this.viewport=new De(0,0,t,e);const s={width:t,height:e,depth:1};i.encoding!==void 0&&(Re("THREE.WebGLRenderTarget: option.encoding has been replaced by option.colorSpace."),i.colorSpace=i.encoding===Ce?Z:Zt),i=Object.assign({generateMipmaps:!1,internalFormat:null,minFilter:mt,depthBuffer:!0,stencilBuffer:!1,depthTexture:null,samples:0},i),this.texture=new nt(s,i.mapping,i.wrapS,i.wrapT,i.magFilter,i.minFilter,i.format,i.type,i.anisotropy,i.colorSpace),this.texture.isRenderTargetTexture=!0,this.texture.flipY=!1,this.texture.generateMipmaps=i.generateMipmaps,this.texture.internalFormat=i.internalFormat,this.depthBuffer=i.depthBuffer,this.stencilBuffer=i.stencilBuffer,this.depthTexture=i.depthTexture,this.samples=i.samples}setSize(t,e,i=1){(this.width!==t||this.height!==e||this.depth!==i)&&(this.width=t,this.height=e,this.depth=i,this.texture.image.width=t,this.texture.image.height=e,this.texture.image.depth=i,this.dispose()),this.viewport.set(0,0,t,e),this.scissor.set(0,0,t,e)}clone(){return new this.constructor().copy(this)}copy(t){this.width=t.width,this.height=t.height,this.depth=t.depth,this.scissor.copy(t.scissor),this.scissorTest=t.scissorTest,this.viewport.copy(t.viewport),this.texture=t.texture.clone(),this.texture.isRenderTargetTexture=!0;const e=Object.assign({},t.texture.image);return this.texture.source=new ys(e),this.depthBuffer=t.depthBuffer,this.stencilBuffer=t.stencilBuffer,t.depthTexture!==null&&(this.depthTexture=t.depthTexture.clone()),this.samples=t.samples,this}dispose(){this.dispatchEvent({type:"dispose"})}}class Hs extends Ws{constructor(t=1,e=1,i={}){super(t,e,i),this.isWebGLRenderTarget=!0}}class ee{constructor(t=0,e=0,i=0,s=1){this.isQuaternion=!0,this._x=t,this._y=e,this._z=i,this._w=s}static slerpFlat(t,e,i,s,n,r,h){let a=i[s+0],o=i[s+1],l=i[s+2],c=i[s+3];const u=n[r+0],f=n[r+1],m=n[r+2],p=n[r+3];if(h===0){t[e+0]=a,t[e+1]=o,t[e+2]=l,t[e+3]=c;return}if(h===1){t[e+0]=u,t[e+1]=f,t[e+2]=m,t[e+3]=p;return}if(c!==p||a!==u||o!==f||l!==m){let y=1-h;const g=a*u+o*f+l*m+c*p,z=g>=0?1:-1,F=1-g*g;if(F>Number.EPSILON){const S=Math.sqrt(F),A=Math.atan2(S,g*z);y=Math.sin(y*A)/S,h=Math.sin(h*A)/S}const w=h*z;if(a=a*y+u*w,o=o*y+f*w,l=l*y+m*w,c=c*y+p*w,y===1-h){const S=1/Math.sqrt(a*a+o*o+l*l+c*c);a*=S,o*=S,l*=S,c*=S}}t[e]=a,t[e+1]=o,t[e+2]=l,t[e+3]=c}static multiplyQuaternionsFlat(t,e,i,s,n,r){const h=i[s],a=i[s+1],o=i[s+2],l=i[s+3],c=n[r],u=n[r+1],f=n[r+2],m=n[r+3];return t[e]=h*m+l*c+a*f-o*u,t[e+1]=a*m+l*u+o*c-h*f,t[e+2]=o*m+l*f+h*u-a*c,t[e+3]=l*m-h*c-a*u-o*f,t}get x(){return this._x}set x(t){this._x=t,this._onChangeCallback()}get y(){return this._y}set y(t){this._y=t,this._onChangeCallback()}get z(){return this._z}set z(t){this._z=t,this._onChangeCallback()}get w(){return this._w}set w(t){this._w=t,this._onChangeCallback()}set(t,e,i,s){return this._x=t,this._y=e,this._z=i,this._w=s,this._onChangeCallback(),this}clone(){return new this.constructor(this._x,this._y,this._z,this._w)}copy(t){return this._x=t.x,this._y=t.y,this._z=t.z,this._w=t.w,this._onChangeCallback(),this}setFromEuler(t,e=!0){const i=t._x,s=t._y,n=t._z,r=t._order,h=Math.cos,a=Math.sin,o=h(i/2),l=h(s/2),c=h(n/2),u=a(i/2),f=a(s/2),m=a(n/2);switch(r){case"XYZ":this._x=u*l*c+o*f*m,this._y=o*f*c-u*l*m,this._z=o*l*m+u*f*c,this._w=o*l*c-u*f*m;break;case"YXZ":this._x=u*l*c+o*f*m,this._y=o*f*c-u*l*m,this._z=o*l*m-u*f*c,this._w=o*l*c+u*f*m;break;case"ZXY":this._x=u*l*c-o*f*m,this._y=o*f*c+u*l*m,this._z=o*l*m+u*f*c,this._w=o*l*c-u*f*m;break;case"ZYX":this._x=u*l*c-o*f*m,this._y=o*f*c+u*l*m,this._z=o*l*m-u*f*c,this._w=o*l*c+u*f*m;break;case"YZX":this._x=u*l*c+o*f*m,this._y=o*f*c+u*l*m,this._z=o*l*m-u*f*c,this._w=o*l*c-u*f*m;break;case"XZY":this._x=u*l*c-o*f*m,this._y=o*f*c-u*l*m,this._z=o*l*m+u*f*c,this._w=o*l*c+u*f*m;break;default:console.warn("THREE.Quaternion: .setFromEuler() encountered an unknown order: "+r)}return e===!0&&this._onChangeCallback(),this}setFromAxisAngle(t,e){const i=e/2,s=Math.sin(i);return this._x=t.x*s,this._y=t.y*s,this._z=t.z*s,this._w=Math.cos(i),this._onChangeCallback(),this}setFromRotationMatrix(t){const e=t.elements,i=e[0],s=e[4],n=e[8],r=e[1],h=e[5],a=e[9],o=e[2],l=e[6],c=e[10],u=i+h+c;if(u>0){const f=.5/Math.sqrt(u+1);this._w=.25/f,this._x=(l-a)*f,this._y=(n-o)*f,this._z=(r-s)*f}else if(i>h&&i>c){const f=2*Math.sqrt(1+i-h-c);this._w=(l-a)/f,this._x=.25*f,this._y=(s+r)/f,this._z=(n+o)/f}else if(h>c){const f=2*Math.sqrt(1+h-i-c);this._w=(n-o)/f,this._x=(s+r)/f,this._y=.25*f,this._z=(a+l)/f}else{const f=2*Math.sqrt(1+c-i-h);this._w=(r-s)/f,this._x=(n+o)/f,this._y=(a+l)/f,this._z=.25*f}return this._onChangeCallback(),this}setFromUnitVectors(t,e){let i=t.dot(e)+1;return i<Number.EPSILON?(i=0,Math.abs(t.x)>Math.abs(t.z)?(this._x=-t.y,this._y=t.x,this._z=0,this._w=i):(this._x=0,this._y=-t.z,this._z=t.y,this._w=i)):(this._x=t.y*e.z-t.z*e.y,this._y=t.z*e.x-t.x*e.z,this._z=t.x*e.y-t.y*e.x,this._w=i),this.normalize()}angleTo(t){return 2*Math.acos(Math.abs(N(this.dot(t),-1,1)))}rotateTowards(t,e){const i=this.angleTo(t);if(i===0)return this;const s=Math.min(1,e/i);return this.slerp(t,s),this}identity(){return this.set(0,0,0,1)}invert(){return this.conjugate()}conjugate(){return this._x*=-1,this._y*=-1,this._z*=-1,this._onChangeCallback(),this}dot(t){return this._x*t._x+this._y*t._y+this._z*t._z+this._w*t._w}lengthSq(){return this._x*this._x+this._y*this._y+this._z*this._z+this._w*this._w}length(){return Math.sqrt(this._x*this._x+this._y*this._y+this._z*this._z+this._w*this._w)}normalize(){let t=this.length();return t===0?(this._x=0,this._y=0,this._z=0,this._w=1):(t=1/t,this._x=this._x*t,this._y=this._y*t,this._z=this._z*t,this._w=this._w*t),this._onChangeCallback(),this}multiply(t){return this.multiplyQuaternions(this,t)}premultiply(t){return this.multiplyQuaternions(t,this)}multiplyQuaternions(t,e){const i=t._x,s=t._y,n=t._z,r=t._w,h=e._x,a=e._y,o=e._z,l=e._w;return this._x=i*l+r*h+s*o-n*a,this._y=s*l+r*a+n*h-i*o,this._z=n*l+r*o+i*a-s*h,this._w=r*l-i*h-s*a-n*o,this._onChangeCallback(),this}slerp(t,e){if(e===0)return this;if(e===1)return this.copy(t);const i=this._x,s=this._y,n=this._z,r=this._w;let h=r*t._w+i*t._x+s*t._y+n*t._z;if(h<0?(this._w=-t._w,this._x=-t._x,this._y=-t._y,this._z=-t._z,h=-h):this.copy(t),h>=1)return this._w=r,this._x=i,this._y=s,this._z=n,this;const a=1-h*h;if(a<=Number.EPSILON){const f=1-e;return this._w=f*r+e*this._w,this._x=f*i+e*this._x,this._y=f*s+e*this._y,this._z=f*n+e*this._z,this.normalize(),this}const o=Math.sqrt(a),l=Math.atan2(o,h),c=Math.sin((1-e)*l)/o,u=Math.sin(e*l)/o;return this._w=r*c+this._w*u,this._x=i*c+this._x*u,this._y=s*c+this._y*u,this._z=n*c+this._z*u,this._onChangeCallback(),this}slerpQuaternions(t,e,i){return this.copy(t).slerp(e,i)}random(){const t=Math.random(),e=Math.sqrt(1-t),i=Math.sqrt(t),s=2*Math.PI*Math.random(),n=2*Math.PI*Math.random();return this.set(e*Math.cos(s),i*Math.sin(n),i*Math.cos(n),e*Math.sin(s))}equals(t){return t._x===this._x&&t._y===this._y&&t._z===this._z&&t._w===this._w}fromArray(t,e=0){return this._x=t[e],this._y=t[e+1],this._z=t[e+2],this._w=t[e+3],this._onChangeCallback(),this}toArray(t=[],e=0){return t[e]=this._x,t[e+1]=this._y,t[e+2]=this._z,t[e+3]=this._w,t}fromBufferAttribute(t,e){return this._x=t.getX(e),this._y=t.getY(e),this._z=t.getZ(e),this._w=t.getW(e),this._onChangeCallback(),this}toJSON(){return this.toArray()}_onChange(t){return this._onChangeCallback=t,this}_onChangeCallback(){}*[Symbol.iterator](){yield this._x,yield this._y,yield this._z,yield this._w}}class x{constructor(t=0,e=0,i=0){x.prototype.isVector3=!0,this.x=t,this.y=e,this.z=i}set(t,e,i){return i===void 0&&(i=this.z),this.x=t,this.y=e,this.z=i,this}setScalar(t){return this.x=t,this.y=t,this.z=t,this}setX(t){return this.x=t,this}setY(t){return this.y=t,this}setZ(t){return this.z=t,this}setComponent(t,e){switch(t){case 0:this.x=e;break;case 1:this.y=e;break;case 2:this.z=e;break;default:throw new Error("index is out of range: "+t)}return this}getComponent(t){switch(t){case 0:return this.x;case 1:return this.y;case 2:return this.z;default:throw new Error("index is out of range: "+t)}}clone(){return new this.constructor(this.x,this.y,this.z)}copy(t){return this.x=t.x,this.y=t.y,this.z=t.z,this}add(t){return this.x+=t.x,this.y+=t.y,this.z+=t.z,this}addScalar(t){return this.x+=t,this.y+=t,this.z+=t,this}addVectors(t,e){return this.x=t.x+e.x,this.y=t.y+e.y,this.z=t.z+e.z,this}addScaledVector(t,e){return this.x+=t.x*e,this.y+=t.y*e,this.z+=t.z*e,this}sub(t){return this.x-=t.x,this.y-=t.y,this.z-=t.z,this}subScalar(t){return this.x-=t,this.y-=t,this.z-=t,this}subVectors(t,e){return this.x=t.x-e.x,this.y=t.y-e.y,this.z=t.z-e.z,this}multiply(t){return this.x*=t.x,this.y*=t.y,this.z*=t.z,this}multiplyScalar(t){return this.x*=t,this.y*=t,this.z*=t,this}multiplyVectors(t,e){return this.x=t.x*e.x,this.y=t.y*e.y,this.z=t.z*e.z,this}applyEuler(t){return this.applyQuaternion(Ui.setFromEuler(t))}applyAxisAngle(t,e){return this.applyQuaternion(Ui.setFromAxisAngle(t,e))}applyMatrix3(t){const e=this.x,i=this.y,s=this.z,n=t.elements;return this.x=n[0]*e+n[3]*i+n[6]*s,this.y=n[1]*e+n[4]*i+n[7]*s,this.z=n[2]*e+n[5]*i+n[8]*s,this}applyNormalMatrix(t){return this.applyMatrix3(t).normalize()}applyMatrix4(t){const e=this.x,i=this.y,s=this.z,n=t.elements,r=1/(n[3]*e+n[7]*i+n[11]*s+n[15]);return this.x=(n[0]*e+n[4]*i+n[8]*s+n[12])*r,this.y=(n[1]*e+n[5]*i+n[9]*s+n[13])*r,this.z=(n[2]*e+n[6]*i+n[10]*s+n[14])*r,this}applyQuaternion(t){const e=this.x,i=this.y,s=this.z,n=t.x,r=t.y,h=t.z,a=t.w,o=2*(r*s-h*i),l=2*(h*e-n*s),c=2*(n*i-r*e);return this.x=e+a*o+r*c-h*l,this.y=i+a*l+h*o-n*c,this.z=s+a*c+n*l-r*o,this}project(t){return this.applyMatrix4(t.matrixWorldInverse).applyMatrix4(t.projectionMatrix)}unproject(t){return this.applyMatrix4(t.projectionMatrixInverse).applyMatrix4(t.matrixWorld)}transformDirection(t){const e=this.x,i=this.y,s=this.z,n=t.elements;return this.x=n[0]*e+n[4]*i+n[8]*s,this.y=n[1]*e+n[5]*i+n[9]*s,this.z=n[2]*e+n[6]*i+n[10]*s,this.normalize()}divide(t){return this.x/=t.x,this.y/=t.y,this.z/=t.z,this}divideScalar(t){return this.multiplyScalar(1/t)}min(t){return this.x=Math.min(this.x,t.x),this.y=Math.min(this.y,t.y),this.z=Math.min(this.z,t.z),this}max(t){return this.x=Math.max(this.x,t.x),this.y=Math.max(this.y,t.y),this.z=Math.max(this.z,t.z),this}clamp(t,e){return this.x=Math.max(t.x,Math.min(e.x,this.x)),this.y=Math.max(t.y,Math.min(e.y,this.y)),this.z=Math.max(t.z,Math.min(e.z,this.z)),this}clampScalar(t,e){return this.x=Math.max(t,Math.min(e,this.x)),this.y=Math.max(t,Math.min(e,this.y)),this.z=Math.max(t,Math.min(e,this.z)),this}clampLength(t,e){const i=this.length();return this.divideScalar(i||1).multiplyScalar(Math.max(t,Math.min(e,i)))}floor(){return this.x=Math.floor(this.x),this.y=Math.floor(this.y),this.z=Math.floor(this.z),this}ceil(){return this.x=Math.ceil(this.x),this.y=Math.ceil(this.y),this.z=Math.ceil(this.z),this}round(){return this.x=Math.round(this.x),this.y=Math.round(this.y),this.z=Math.round(this.z),this}roundToZero(){return this.x=Math.trunc(this.x),this.y=Math.trunc(this.y),this.z=Math.trunc(this.z),this}negate(){return this.x=-this.x,this.y=-this.y,this.z=-this.z,this}dot(t){return this.x*t.x+this.y*t.y+this.z*t.z}lengthSq(){return this.x*this.x+this.y*this.y+this.z*this.z}length(){return Math.sqrt(this.x*this.x+this.y*this.y+this.z*this.z)}manhattanLength(){return Math.abs(this.x)+Math.abs(this.y)+Math.abs(this.z)}normalize(){return this.divideScalar(this.length()||1)}setLength(t){return this.normalize().multiplyScalar(t)}lerp(t,e){return this.x+=(t.x-this.x)*e,this.y+=(t.y-this.y)*e,this.z+=(t.z-this.z)*e,this}lerpVectors(t,e,i){return this.x=t.x+(e.x-t.x)*i,this.y=t.y+(e.y-t.y)*i,this.z=t.z+(e.z-t.z)*i,this}cross(t){return this.crossVectors(this,t)}crossVectors(t,e){const i=t.x,s=t.y,n=t.z,r=e.x,h=e.y,a=e.z;return this.x=s*a-n*h,this.y=n*r-i*a,this.z=i*h-s*r,this}projectOnVector(t){const e=t.lengthSq();if(e===0)return this.set(0,0,0);const i=t.dot(this)/e;return this.copy(t).multiplyScalar(i)}projectOnPlane(t){return He.copy(this).projectOnVector(t),this.sub(He)}reflect(t){return this.sub(He.copy(t).multiplyScalar(2*this.dot(t)))}angleTo(t){const e=Math.sqrt(this.lengthSq()*t.lengthSq());if(e===0)return Math.PI/2;const i=this.dot(t)/e;return Math.acos(N(i,-1,1))}distanceTo(t){return Math.sqrt(this.distanceToSquared(t))}distanceToSquared(t){const e=this.x-t.x,i=this.y-t.y,s=this.z-t.z;return e*e+i*i+s*s}manhattanDistanceTo(t){return Math.abs(this.x-t.x)+Math.abs(this.y-t.y)+Math.abs(this.z-t.z)}setFromSpherical(t){return this.setFromSphericalCoords(t.radius,t.phi,t.theta)}setFromSphericalCoords(t,e,i){const s=Math.sin(e)*t;return this.x=s*Math.sin(i),this.y=Math.cos(e)*t,this.z=s*Math.cos(i),this}setFromCylindrical(t){return this.setFromCylindricalCoords(t.radius,t.theta,t.y)}setFromCylindricalCoords(t,e,i){return this.x=t*Math.sin(e),this.y=i,this.z=t*Math.cos(e),this}setFromMatrixPosition(t){const e=t.elements;return this.x=e[12],this.y=e[13],this.z=e[14],this}setFromMatrixScale(t){const e=this.setFromMatrixColumn(t,0).length(),i=this.setFromMatrixColumn(t,1).length(),s=this.setFromMatrixColumn(t,2).length();return this.x=e,this.y=i,this.z=s,this}setFromMatrixColumn(t,e){return this.fromArray(t.elements,e*4)}setFromMatrix3Column(t,e){return this.fromArray(t.elements,e*3)}setFromEuler(t){return this.x=t._x,this.y=t._y,this.z=t._z,this}setFromColor(t){return this.x=t.r,this.y=t.g,this.z=t.b,this}equals(t){return t.x===this.x&&t.y===this.y&&t.z===this.z}fromArray(t,e=0){return this.x=t[e],this.y=t[e+1],this.z=t[e+2],this}toArray(t=[],e=0){return t[e]=this.x,t[e+1]=this.y,t[e+2]=this.z,t}fromBufferAttribute(t,e){return this.x=t.getX(e),this.y=t.getY(e),this.z=t.getZ(e),this}random(){return this.x=Math.random(),this.y=Math.random(),this.z=Math.random(),this}randomDirection(){const t=(Math.random()-.5)*2,e=Math.random()*Math.PI*2,i=Math.sqrt(1-t**2);return this.x=i*Math.cos(e),this.y=i*Math.sin(e),this.z=t,this}*[Symbol.iterator](){yield this.x,yield this.y,yield this.z}}const He=new x,Ui=new ee;class ie{constructor(t=new x(1/0,1/0,1/0),e=new x(-1/0,-1/0,-1/0)){this.isBox3=!0,this.min=t,this.max=e}set(t,e){return this.min.copy(t),this.max.copy(e),this}setFromArray(t){this.makeEmpty();for(let e=0,i=t.length;e<i;e+=3)this.expandByPoint(tt.fromArray(t,e));return this}setFromBufferAttribute(t){this.makeEmpty();for(let e=0,i=t.count;e<i;e++)this.expandByPoint(tt.fromBufferAttribute(t,e));return this}setFromPoints(t){this.makeEmpty();for(let e=0,i=t.length;e<i;e++)this.expandByPoint(t[e]);return this}setFromCenterAndSize(t,e){const i=tt.copy(e).multiplyScalar(.5);return this.min.copy(t).sub(i),this.max.copy(t).add(i),this}setFromObject(t,e=!1){return this.makeEmpty(),this.expandByObject(t,e)}clone(){return new this.constructor().copy(this)}copy(t){return this.min.copy(t.min),this.max.copy(t.max),this}makeEmpty(){return this.min.x=this.min.y=this.min.z=1/0,this.max.x=this.max.y=this.max.z=-1/0,this}isEmpty(){return this.max.x<this.min.x||this.max.y<this.min.y||this.max.z<this.min.z}getCenter(t){return this.isEmpty()?t.set(0,0,0):t.addVectors(this.min,this.max).multiplyScalar(.5)}getSize(t){return this.isEmpty()?t.set(0,0,0):t.subVectors(this.max,this.min)}expandByPoint(t){return this.min.min(t),this.max.max(t),this}expandByVector(t){return this.min.sub(t),this.max.add(t),this}expandByScalar(t){return this.min.addScalar(-t),this.max.addScalar(t),this}expandByObject(t,e=!1){t.updateWorldMatrix(!1,!1);const i=t.geometry;if(i!==void 0){const n=i.getAttribute("position");if(e===!0&&n!==void 0&&t.isInstancedMesh!==!0)for(let r=0,h=n.count;r<h;r++)t.isMesh===!0?t.getVertexPosition(r,tt):tt.fromBufferAttribute(n,r),tt.applyMatrix4(t.matrixWorld),this.expandByPoint(tt);else t.boundingBox!==void 0?(t.boundingBox===null&&t.computeBoundingBox(),oe.copy(t.boundingBox)):(i.boundingBox===null&&i.computeBoundingBox(),oe.copy(i.boundingBox)),oe.applyMatrix4(t.matrixWorld),this.union(oe)}const s=t.children;for(let n=0,r=s.length;n<r;n++)this.expandByObject(s[n],e);return this}containsPoint(t){return!(t.x<this.min.x||t.x>this.max.x||t.y<this.min.y||t.y>this.max.y||t.z<this.min.z||t.z>this.max.z)}containsBox(t){return this.min.x<=t.min.x&&t.max.x<=this.max.x&&this.min.y<=t.min.y&&t.max.y<=this.max.y&&this.min.z<=t.min.z&&t.max.z<=this.max.z}getParameter(t,e){return e.set((t.x-this.min.x)/(this.max.x-this.min.x),(t.y-this.min.y)/(this.max.y-this.min.y),(t.z-this.min.z)/(this.max.z-this.min.z))}intersectsBox(t){return!(t.max.x<this.min.x||t.min.x>this.max.x||t.max.y<this.min.y||t.min.y>this.max.y||t.max.z<this.min.z||t.min.z>this.max.z)}intersectsSphere(t){return this.clampPoint(t.center,tt),tt.distanceToSquared(t.center)<=t.radius*t.radius}intersectsPlane(t){let e,i;return t.normal.x>0?(e=t.normal.x*this.min.x,i=t.normal.x*this.max.x):(e=t.normal.x*this.max.x,i=t.normal.x*this.min.x),t.normal.y>0?(e+=t.normal.y*this.min.y,i+=t.normal.y*this.max.y):(e+=t.normal.y*this.max.y,i+=t.normal.y*this.min.y),t.normal.z>0?(e+=t.normal.z*this.min.z,i+=t.normal.z*this.max.z):(e+=t.normal.z*this.max.z,i+=t.normal.z*this.min.z),e<=-t.constant&&i>=-t.constant}intersectsTriangle(t){if(this.isEmpty())return!1;this.getCenter(jt),he.subVectors(this.max,jt),vt.subVectors(t.a,jt),Ct.subVectors(t.b,jt),Rt.subVectors(t.c,jt),yt.subVectors(Ct,vt),xt.subVectors(Rt,Ct),_t.subVectors(vt,Rt);let e=[0,-yt.z,yt.y,0,-xt.z,xt.y,0,-_t.z,_t.y,yt.z,0,-yt.x,xt.z,0,-xt.x,_t.z,0,-_t.x,-yt.y,yt.x,0,-xt.y,xt.x,0,-_t.y,_t.x,0];return!je(e,vt,Ct,Rt,he)||(e=[1,0,0,0,1,0,0,0,1],!je(e,vt,Ct,Rt,he))?!1:(le.crossVectors(yt,xt),e=[le.x,le.y,le.z],je(e,vt,Ct,Rt,he))}clampPoint(t,e){return e.copy(t).clamp(this.min,this.max)}distanceToPoint(t){return this.clampPoint(t,tt).distanceTo(t)}getBoundingSphere(t){return this.isEmpty()?t.makeEmpty():(this.getCenter(t.center),t.radius=this.getSize(tt).length()*.5),t}intersect(t){return this.min.max(t.min),this.max.min(t.max),this.isEmpty()&&this.makeEmpty(),this}union(t){return this.min.min(t.min),this.max.max(t.max),this}applyMatrix4(t){return this.isEmpty()?this:(at[0].set(this.min.x,this.min.y,this.min.z).applyMatrix4(t),at[1].set(this.min.x,this.min.y,this.max.z).applyMatrix4(t),at[2].set(this.min.x,this.max.y,this.min.z).applyMatrix4(t),at[3].set(this.min.x,this.max.y,this.max.z).applyMatrix4(t),at[4].set(this.max.x,this.min.y,this.min.z).applyMatrix4(t),at[5].set(this.max.x,this.min.y,this.max.z).applyMatrix4(t),at[6].set(this.max.x,this.max.y,this.min.z).applyMatrix4(t),at[7].set(this.max.x,this.max.y,this.max.z).applyMatrix4(t),this.setFromPoints(at),this)}translate(t){return this.min.add(t),this.max.add(t),this}equals(t){return t.min.equals(this.min)&&t.max.equals(this.max)}}const at=[new x,new x,new x,new x,new x,new x,new x,new x],tt=new x,oe=new ie,vt=new x,Ct=new x,Rt=new x,yt=new x,xt=new x,_t=new x,jt=new x,he=new x,le=new x,zt=new x;function je(d,t,e,i,s){for(let n=0,r=d.length-3;n<=r;n+=3){zt.fromArray(d,n);const h=s.x*Math.abs(zt.x)+s.y*Math.abs(zt.y)+s.z*Math.abs(zt.z),a=t.dot(zt),o=e.dot(zt),l=i.dot(zt);if(Math.max(-Math.max(a,o,l),Math.min(a,o,l))>h)return!1}return!0}const js=new ie,Gt=new x,Ge=new x;class xs{constructor(t=new x,e=-1){this.isSphere=!0,this.center=t,this.radius=e}set(t,e){return this.center.copy(t),this.radius=e,this}setFromPoints(t,e){const i=this.center;e!==void 0?i.copy(e):js.setFromPoints(t).getCenter(i);let s=0;for(let n=0,r=t.length;n<r;n++)s=Math.max(s,i.distanceToSquared(t[n]));return this.radius=Math.sqrt(s),this}copy(t){return this.center.copy(t.center),this.radius=t.radius,this}isEmpty(){return this.radius<0}makeEmpty(){return this.center.set(0,0,0),this.radius=-1,this}containsPoint(t){return t.distanceToSquared(this.center)<=this.radius*this.radius}distanceToPoint(t){return t.distanceTo(this.center)-this.radius}intersectsSphere(t){const e=this.radius+t.radius;return t.center.distanceToSquared(this.center)<=e*e}intersectsBox(t){return t.intersectsSphere(this)}intersectsPlane(t){return Math.abs(t.distanceToPoint(this.center))<=this.radius}clampPoint(t,e){const i=this.center.distanceToSquared(t);return e.copy(t),i>this.radius*this.radius&&(e.sub(this.center).normalize(),e.multiplyScalar(this.radius).add(this.center)),e}getBoundingBox(t){return this.isEmpty()?(t.makeEmpty(),t):(t.set(this.center,this.center),t.expandByScalar(this.radius),t)}applyMatrix4(t){return this.center.applyMatrix4(t),this.radius=this.radius*t.getMaxScaleOnAxis(),this}translate(t){return this.center.add(t),this}expandByPoint(t){if(this.isEmpty())return this.center.copy(t),this.radius=0,this;Gt.subVectors(t,this.center);const e=Gt.lengthSq();if(e>this.radius*this.radius){const i=Math.sqrt(e),s=(i-this.radius)*.5;this.center.addScaledVector(Gt,s/i),this.radius+=s}return this}union(t){return t.isEmpty()?this:this.isEmpty()?(this.copy(t),this):(this.center.equals(t.center)===!0?this.radius=Math.max(this.radius,t.radius):(Ge.subVectors(t.center,this.center).setLength(t.radius),this.expandByPoint(Gt.copy(t.center).add(Ge)),this.expandByPoint(Gt.copy(t.center).sub(Ge))),this)}equals(t){return t.center.equals(this.center)&&t.radius===this.radius}clone(){return new this.constructor().copy(this)}}const ot=new x,Xe=new x,ce=new x,gt=new x,Ye=new x,ue=new x,$e=new x;class gs{constructor(t=new x,e=new x(0,0,-1)){this.origin=t,this.direction=e}set(t,e){return this.origin.copy(t),this.direction.copy(e),this}copy(t){return this.origin.copy(t.origin),this.direction.copy(t.direction),this}at(t,e){return e.copy(this.origin).addScaledVector(this.direction,t)}lookAt(t){return this.direction.copy(t).sub(this.origin).normalize(),this}recast(t){return this.origin.copy(this.at(t,ot)),this}closestPointToPoint(t,e){e.subVectors(t,this.origin);const i=e.dot(this.direction);return i<0?e.copy(this.origin):e.copy(this.origin).addScaledVector(this.direction,i)}distanceToPoint(t){return Math.sqrt(this.distanceSqToPoint(t))}distanceSqToPoint(t){const e=ot.subVectors(t,this.origin).dot(this.direction);return e<0?this.origin.distanceToSquared(t):(ot.copy(this.origin).addScaledVector(this.direction,e),ot.distanceToSquared(t))}distanceSqToSegment(t,e,i,s){Xe.copy(t).add(e).multiplyScalar(.5),ce.copy(e).sub(t).normalize(),gt.copy(this.origin).sub(Xe);const n=t.distanceTo(e)*.5,r=-this.direction.dot(ce),h=gt.dot(this.direction),a=-gt.dot(ce),o=gt.lengthSq(),l=Math.abs(1-r*r);let c,u,f,m;if(l>0)if(c=r*a-h,u=r*h-a,m=n*l,c>=0)if(u>=-m)if(u<=m){const p=1/l;c*=p,u*=p,f=c*(c+r*u+2*h)+u*(r*c+u+2*a)+o}else u=n,c=Math.max(0,-(r*u+h)),f=-c*c+u*(u+2*a)+o;else u=-n,c=Math.max(0,-(r*u+h)),f=-c*c+u*(u+2*a)+o;else u<=-m?(c=Math.max(0,-(-r*n+h)),u=c>0?-n:Math.min(Math.max(-n,-a),n),f=-c*c+u*(u+2*a)+o):u<=m?(c=0,u=Math.min(Math.max(-n,-a),n),f=u*(u+2*a)+o):(c=Math.max(0,-(r*n+h)),u=c>0?n:Math.min(Math.max(-n,-a),n),f=-c*c+u*(u+2*a)+o);else u=r>0?-n:n,c=Math.max(0,-(r*u+h)),f=-c*c+u*(u+2*a)+o;return i&&i.copy(this.origin).addScaledVector(this.direction,c),s&&s.copy(Xe).addScaledVector(ce,u),f}intersectSphere(t,e){ot.subVectors(t.center,this.origin);const i=ot.dot(this.direction),s=ot.dot(ot)-i*i,n=t.radius*t.radius;if(s>n)return null;const r=Math.sqrt(n-s),h=i-r,a=i+r;return a<0?null:h<0?this.at(a,e):this.at(h,e)}intersectsSphere(t){return this.distanceSqToPoint(t.center)<=t.radius*t.radius}distanceToPlane(t){const e=t.normal.dot(this.direction);if(e===0)return t.distanceToPoint(this.origin)===0?0:null;const i=-(this.origin.dot(t.normal)+t.constant)/e;return i>=0?i:null}intersectPlane(t,e){const i=this.distanceToPlane(t);return i===null?null:this.at(i,e)}intersectsPlane(t){const e=t.distanceToPoint(this.origin);return e===0||t.normal.dot(this.direction)*e<0}intersectBox(t,e){let i,s,n,r,h,a;const o=1/this.direction.x,l=1/this.direction.y,c=1/this.direction.z,u=this.origin;return o>=0?(i=(t.min.x-u.x)*o,s=(t.max.x-u.x)*o):(i=(t.max.x-u.x)*o,s=(t.min.x-u.x)*o),l>=0?(n=(t.min.y-u.y)*l,r=(t.max.y-u.y)*l):(n=(t.max.y-u.y)*l,r=(t.min.y-u.y)*l),i>r||n>s||((n>i||isNaN(i))&&(i=n),(r<s||isNaN(s))&&(s=r),c>=0?(h=(t.min.z-u.z)*c,a=(t.max.z-u.z)*c):(h=(t.max.z-u.z)*c,a=(t.min.z-u.z)*c),i>a||h>s)||((h>i||i!==i)&&(i=h),(a<s||s!==s)&&(s=a),s<0)?null:this.at(i>=0?i:s,e)}intersectsBox(t){return this.intersectBox(t,ot)!==null}intersectTriangle(t,e,i,s,n){Ye.subVectors(e,t),ue.subVectors(i,t),$e.crossVectors(Ye,ue);let r=this.direction.dot($e),h;if(r>0){if(s)return null;h=1}else if(r<0)h=-1,r=-r;else return null;gt.subVectors(this.origin,t);const a=h*this.direction.dot(ue.crossVectors(gt,ue));if(a<0)return null;const o=h*this.direction.dot(Ye.cross(gt));if(o<0||a+o>r)return null;const l=-h*gt.dot($e);return l<0?null:this.at(l/r,n)}applyMatrix4(t){return this.origin.applyMatrix4(t),this.direction.transformDirection(t),this}equals(t){return t.origin.equals(this.origin)&&t.direction.equals(this.direction)}clone(){return new this.constructor().copy(this)}}class X{constructor(t,e,i,s,n,r,h,a,o,l,c,u,f,m,p,y){X.prototype.isMatrix4=!0,this.elements=[1,0,0,0,0,1,0,0,0,0,1,0,0,0,0,1],t!==void 0&&this.set(t,e,i,s,n,r,h,a,o,l,c,u,f,m,p,y)}set(t,e,i,s,n,r,h,a,o,l,c,u,f,m,p,y){const g=this.elements;return g[0]=t,g[4]=e,g[8]=i,g[12]=s,g[1]=n,g[5]=r,g[9]=h,g[13]=a,g[2]=o,g[6]=l,g[10]=c,g[14]=u,g[3]=f,g[7]=m,g[11]=p,g[15]=y,this}identity(){return this.set(1,0,0,0,0,1,0,0,0,0,1,0,0,0,0,1),this}clone(){return new X().fromArray(this.elements)}copy(t){const e=this.elements,i=t.elements;return e[0]=i[0],e[1]=i[1],e[2]=i[2],e[3]=i[3],e[4]=i[4],e[5]=i[5],e[6]=i[6],e[7]=i[7],e[8]=i[8],e[9]=i[9],e[10]=i[10],e[11]=i[11],e[12]=i[12],e[13]=i[13],e[14]=i[14],e[15]=i[15],this}copyPosition(t){const e=this.elements,i=t.elements;return e[12]=i[12],e[13]=i[13],e[14]=i[14],this}setFromMatrix3(t){const e=t.elements;return this.set(e[0],e[3],e[6],0,e[1],e[4],e[7],0,e[2],e[5],e[8],0,0,0,0,1),this}extractBasis(t,e,i){return t.setFromMatrixColumn(this,0),e.setFromMatrixColumn(this,1),i.setFromMatrixColumn(this,2),this}makeBasis(t,e,i){return this.set(t.x,e.x,i.x,0,t.y,e.y,i.y,0,t.z,e.z,i.z,0,0,0,0,1),this}extractRotation(t){const e=this.elements,i=t.elements,s=1/Bt.setFromMatrixColumn(t,0).length(),n=1/Bt.setFromMatrixColumn(t,1).length(),r=1/Bt.setFromMatrixColumn(t,2).length();return e[0]=i[0]*s,e[1]=i[1]*s,e[2]=i[2]*s,e[3]=0,e[4]=i[4]*n,e[5]=i[5]*n,e[6]=i[6]*n,e[7]=0,e[8]=i[8]*r,e[9]=i[9]*r,e[10]=i[10]*r,e[11]=0,e[12]=0,e[13]=0,e[14]=0,e[15]=1,this}makeRotationFromEuler(t){const e=this.elements,i=t.x,s=t.y,n=t.z,r=Math.cos(i),h=Math.sin(i),a=Math.cos(s),o=Math.sin(s),l=Math.cos(n),c=Math.sin(n);if(t.order==="XYZ"){const u=r*l,f=r*c,m=h*l,p=h*c;e[0]=a*l,e[4]=-a*c,e[8]=o,e[1]=f+m*o,e[5]=u-p*o,e[9]=-h*a,e[2]=p-u*o,e[6]=m+f*o,e[10]=r*a}else if(t.order==="YXZ"){const u=a*l,f=a*c,m=o*l,p=o*c;e[0]=u+p*h,e[4]=m*h-f,e[8]=r*o,e[1]=r*c,e[5]=r*l,e[9]=-h,e[2]=f*h-m,e[6]=p+u*h,e[10]=r*a}else if(t.order==="ZXY"){const u=a*l,f=a*c,m=o*l,p=o*c;e[0]=u-p*h,e[4]=-r*c,e[8]=m+f*h,e[1]=f+m*h,e[5]=r*l,e[9]=p-u*h,e[2]=-r*o,e[6]=h,e[10]=r*a}else if(t.order==="ZYX"){const u=r*l,f=r*c,m=h*l,p=h*c;e[0]=a*l,e[4]=m*o-f,e[8]=u*o+p,e[1]=a*c,e[5]=p*o+u,e[9]=f*o-m,e[2]=-o,e[6]=h*a,e[10]=r*a}else if(t.order==="YZX"){const u=r*a,f=r*o,m=h*a,p=h*o;e[0]=a*l,e[4]=p-u*c,e[8]=m*c+f,e[1]=c,e[5]=r*l,e[9]=-h*l,e[2]=-o*l,e[6]=f*c+m,e[10]=u-p*c}else if(t.order==="XZY"){const u=r*a,f=r*o,m=h*a,p=h*o;e[0]=a*l,e[4]=-c,e[8]=o*l,e[1]=u*c+p,e[5]=r*l,e[9]=f*c-m,e[2]=m*c-f,e[6]=h*l,e[10]=p*c+u}return e[3]=0,e[7]=0,e[11]=0,e[12]=0,e[13]=0,e[14]=0,e[15]=1,this}makeRotationFromQuaternion(t){return this.compose(Gs,t,Xs)}lookAt(t,e,i){const s=this.elements;return Y.subVectors(t,e),Y.lengthSq()===0&&(Y.z=1),Y.normalize(),Mt.crossVectors(i,Y),Mt.lengthSq()===0&&(Math.abs(i.z)===1?Y.x+=1e-4:Y.z+=1e-4,Y.normalize(),Mt.crossVectors(i,Y)),Mt.normalize(),de.crossVectors(Y,Mt),s[0]=Mt.x,s[4]=de.x,s[8]=Y.x,s[1]=Mt.y,s[5]=de.y,s[9]=Y.y,s[2]=Mt.z,s[6]=de.z,s[10]=Y.z,this}multiply(t){return this.multiplyMatrices(this,t)}premultiply(t){return this.multiplyMatrices(t,this)}multiplyMatrices(t,e){const i=t.elements,s=e.elements,n=this.elements,r=i[0],h=i[4],a=i[8],o=i[12],l=i[1],c=i[5],u=i[9],f=i[13],m=i[2],p=i[6],y=i[10],g=i[14],z=i[3],F=i[7],w=i[11],S=i[15],A=s[0],b=s[4],M=s[8],E=s[12],_=s[1],v=s[5],B=s[9],R=s[13],T=s[2],C=s[6],k=s[10],H=s[14],Q=s[3],D=s[7],I=s[11],U=s[15];return n[0]=r*A+h*_+a*T+o*Q,n[4]=r*b+h*v+a*C+o*D,n[8]=r*M+h*B+a*k+o*I,n[12]=r*E+h*R+a*H+o*U,n[1]=l*A+c*_+u*T+f*Q,n[5]=l*b+c*v+u*C+f*D,n[9]=l*M+c*B+u*k+f*I,n[13]=l*E+c*R+u*H+f*U,n[2]=m*A+p*_+y*T+g*Q,n[6]=m*b+p*v+y*C+g*D,n[10]=m*M+p*B+y*k+g*I,n[14]=m*E+p*R+y*H+g*U,n[3]=z*A+F*_+w*T+S*Q,n[7]=z*b+F*v+w*C+S*D,n[11]=z*M+F*B+w*k+S*I,n[15]=z*E+F*R+w*H+S*U,this}multiplyScalar(t){const e=this.elements;return e[0]*=t,e[4]*=t,e[8]*=t,e[12]*=t,e[1]*=t,e[5]*=t,e[9]*=t,e[13]*=t,e[2]*=t,e[6]*=t,e[10]*=t,e[14]*=t,e[3]*=t,e[7]*=t,e[11]*=t,e[15]*=t,this}determinant(){const t=this.elements,e=t[0],i=t[4],s=t[8],n=t[12],r=t[1],h=t[5],a=t[9],o=t[13],l=t[2],c=t[6],u=t[10],f=t[14],m=t[3],p=t[7],y=t[11],g=t[15];return m*(+n*a*c-s*o*c-n*h*u+i*o*u+s*h*f-i*a*f)+p*(+e*a*f-e*o*u+n*r*u-s*r*f+s*o*l-n*a*l)+y*(+e*o*c-e*h*f-n*r*c+i*r*f+n*h*l-i*o*l)+g*(-s*h*l-e*a*c+e*h*u+s*r*c-i*r*u+i*a*l)}transpose(){const t=this.elements;let e;return e=t[1],t[1]=t[4],t[4]=e,e=t[2],t[2]=t[8],t[8]=e,e=t[6],t[6]=t[9],t[9]=e,e=t[3],t[3]=t[12],t[12]=e,e=t[7],t[7]=t[13],t[13]=e,e=t[11],t[11]=t[14],t[14]=e,this}setPosition(t,e,i){const s=this.elements;return t.isVector3?(s[12]=t.x,s[13]=t.y,s[14]=t.z):(s[12]=t,s[13]=e,s[14]=i),this}invert(){const t=this.elements,e=t[0],i=t[1],s=t[2],n=t[3],r=t[4],h=t[5],a=t[6],o=t[7],l=t[8],c=t[9],u=t[10],f=t[11],m=t[12],p=t[13],y=t[14],g=t[15],z=c*y*o-p*u*o+p*a*f-h*y*f-c*a*g+h*u*g,F=m*u*o-l*y*o-m*a*f+r*y*f+l*a*g-r*u*g,w=l*p*o-m*c*o+m*h*f-r*p*f-l*h*g+r*c*g,S=m*c*a-l*p*a-m*h*u+r*p*u+l*h*y-r*c*y,A=e*z+i*F+s*w+n*S;if(A===0)return this.set(0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0);const b=1/A;return t[0]=z*b,t[1]=(p*u*n-c*y*n-p*s*f+i*y*f+c*s*g-i*u*g)*b,t[2]=(h*y*n-p*a*n+p*s*o-i*y*o-h*s*g+i*a*g)*b,t[3]=(c*a*n-h*u*n-c*s*o+i*u*o+h*s*f-i*a*f)*b,t[4]=F*b,t[5]=(l*y*n-m*u*n+m*s*f-e*y*f-l*s*g+e*u*g)*b,t[6]=(m*a*n-r*y*n-m*s*o+e*y*o+r*s*g-e*a*g)*b,t[7]=(r*u*n-l*a*n+l*s*o-e*u*o-r*s*f+e*a*f)*b,t[8]=w*b,t[9]=(m*c*n-l*p*n-m*i*f+e*p*f+l*i*g-e*c*g)*b,t[10]=(r*p*n-m*h*n+m*i*o-e*p*o-r*i*g+e*h*g)*b,t[11]=(l*h*n-r*c*n-l*i*o+e*c*o+r*i*f-e*h*f)*b,t[12]=S*b,t[13]=(l*p*s-m*c*s+m*i*u-e*p*u-l*i*y+e*c*y)*b,t[14]=(m*h*s-r*p*s-m*i*a+e*p*a+r*i*y-e*h*y)*b,t[15]=(r*c*s-l*h*s+l*i*a-e*c*a-r*i*u+e*h*u)*b,this}scale(t){const e=this.elements,i=t.x,s=t.y,n=t.z;return e[0]*=i,e[4]*=s,e[8]*=n,e[1]*=i,e[5]*=s,e[9]*=n,e[2]*=i,e[6]*=s,e[10]*=n,e[3]*=i,e[7]*=s,e[11]*=n,this}getMaxScaleOnAxis(){const t=this.elements,e=t[0]*t[0]+t[1]*t[1]+t[2]*t[2],i=t[4]*t[4]+t[5]*t[5]+t[6]*t[6],s=t[8]*t[8]+t[9]*t[9]+t[10]*t[10];return Math.sqrt(Math.max(e,i,s))}makeTranslation(t,e,i){return t.isVector3?this.set(1,0,0,t.x,0,1,0,t.y,0,0,1,t.z,0,0,0,1):this.set(1,0,0,t,0,1,0,e,0,0,1,i,0,0,0,1),this}makeRotationX(t){const e=Math.cos(t),i=Math.sin(t);return this.set(1,0,0,0,0,e,-i,0,0,i,e,0,0,0,0,1),this}makeRotationY(t){const e=Math.cos(t),i=Math.sin(t);return this.set(e,0,i,0,0,1,0,0,-i,0,e,0,0,0,0,1),this}makeRotationZ(t){const e=Math.cos(t),i=Math.sin(t);return this.set(e,-i,0,0,i,e,0,0,0,0,1,0,0,0,0,1),this}makeRotationAxis(t,e){const i=Math.cos(e),s=Math.sin(e),n=1-i,r=t.x,h=t.y,a=t.z,o=n*r,l=n*h;return this.set(o*r+i,o*h-s*a,o*a+s*h,0,o*h+s*a,l*h+i,l*a-s*r,0,o*a-s*h,l*a+s*r,n*a*a+i,0,0,0,0,1),this}makeScale(t,e,i){return this.set(t,0,0,0,0,e,0,0,0,0,i,0,0,0,0,1),this}makeShear(t,e,i,s,n,r){return this.set(1,i,n,0,t,1,r,0,e,s,1,0,0,0,0,1),this}compose(t,e,i){const s=this.elements,n=e._x,r=e._y,h=e._z,a=e._w,o=n+n,l=r+r,c=h+h,u=n*o,f=n*l,m=n*c,p=r*l,y=r*c,g=h*c,z=a*o,F=a*l,w=a*c,S=i.x,A=i.y,b=i.z;return s[0]=(1-(p+g))*S,s[1]=(f+w)*S,s[2]=(m-F)*S,s[3]=0,s[4]=(f-w)*A,s[5]=(1-(u+g))*A,s[6]=(y+z)*A,s[7]=0,s[8]=(m+F)*b,s[9]=(y-z)*b,s[10]=(1-(u+p))*b,s[11]=0,s[12]=t.x,s[13]=t.y,s[14]=t.z,s[15]=1,this}decompose(t,e,i){const s=this.elements;let n=Bt.set(s[0],s[1],s[2]).length();const r=Bt.set(s[4],s[5],s[6]).length(),h=Bt.set(s[8],s[9],s[10]).length();this.determinant()<0&&(n=-n),t.x=s[12],t.y=s[13],t.z=s[14],et.copy(this);const o=1/n,l=1/r,c=1/h;return et.elements[0]*=o,et.elements[1]*=o,et.elements[2]*=o,et.elements[4]*=l,et.elements[5]*=l,et.elements[6]*=l,et.elements[8]*=c,et.elements[9]*=c,et.elements[10]*=c,e.setFromRotationMatrix(et),i.x=n,i.y=r,i.z=h,this}makePerspective(t,e,i,s,n,r,h=Jt){const a=this.elements,o=2*n/(e-t),l=2*n/(i-s),c=(e+t)/(e-t),u=(i+s)/(i-s);let f,m;if(h===Jt)f=-(r+n)/(r-n),m=-2*r*n/(r-n);else if(h===Di)f=-r/(r-n),m=-r*n/(r-n);else throw new Error("THREE.Matrix4.makePerspective(): Invalid coordinate system: "+h);return a[0]=o,a[4]=0,a[8]=c,a[12]=0,a[1]=0,a[5]=l,a[9]=u,a[13]=0,a[2]=0,a[6]=0,a[10]=f,a[14]=m,a[3]=0,a[7]=0,a[11]=-1,a[15]=0,this}makeOrthographic(t,e,i,s,n,r,h=Jt){const a=this.elements,o=1/(e-t),l=1/(i-s),c=1/(r-n),u=(e+t)*o,f=(i+s)*l;let m,p;if(h===Jt)m=(r+n)*c,p=-2*c;else if(h===Di)m=n*c,p=-1*c;else throw new Error("THREE.Matrix4.makeOrthographic(): Invalid coordinate system: "+h);return a[0]=2*o,a[4]=0,a[8]=0,a[12]=-u,a[1]=0,a[5]=2*l,a[9]=0,a[13]=-f,a[2]=0,a[6]=0,a[10]=p,a[14]=-m,a[3]=0,a[7]=0,a[11]=0,a[15]=1,this}equals(t){const e=this.elements,i=t.elements;for(let s=0;s<16;s++)if(e[s]!==i[s])return!1;return!0}fromArray(t,e=0){for(let i=0;i<16;i++)this.elements[i]=t[i+e];return this}toArray(t=[],e=0){const i=this.elements;return t[e]=i[0],t[e+1]=i[1],t[e+2]=i[2],t[e+3]=i[3],t[e+4]=i[4],t[e+5]=i[5],t[e+6]=i[6],t[e+7]=i[7],t[e+8]=i[8],t[e+9]=i[9],t[e+10]=i[10],t[e+11]=i[11],t[e+12]=i[12],t[e+13]=i[13],t[e+14]=i[14],t[e+15]=i[15],t}}const Bt=new x,et=new X,Gs=new x(0,0,0),Xs=new x(1,1,1),Mt=new x,de=new x,Y=new x,Ni=new X,Wi=new ee;class Oe{constructor(t=0,e=0,i=0,s=Oe.DEFAULT_ORDER){this.isEuler=!0,this._x=t,this._y=e,this._z=i,this._order=s}get x(){return this._x}set x(t){this._x=t,this._onChangeCallback()}get y(){return this._y}set y(t){this._y=t,this._onChangeCallback()}get z(){return this._z}set z(t){this._z=t,this._onChangeCallback()}get order(){return this._order}set order(t){this._order=t,this._onChangeCallback()}set(t,e,i,s=this._order){return this._x=t,this._y=e,this._z=i,this._order=s,this._onChangeCallback(),this}clone(){return new this.constructor(this._x,this._y,this._z,this._order)}copy(t){return this._x=t._x,this._y=t._y,this._z=t._z,this._order=t._order,this._onChangeCallback(),this}setFromRotationMatrix(t,e=this._order,i=!0){const s=t.elements,n=s[0],r=s[4],h=s[8],a=s[1],o=s[5],l=s[9],c=s[2],u=s[6],f=s[10];switch(e){case"XYZ":this._y=Math.asin(N(h,-1,1)),Math.abs(h)<.9999999?(this._x=Math.atan2(-l,f),this._z=Math.atan2(-r,n)):(this._x=Math.atan2(u,o),this._z=0);break;case"YXZ":this._x=Math.asin(-N(l,-1,1)),Math.abs(l)<.9999999?(this._y=Math.atan2(h,f),this._z=Math.atan2(a,o)):(this._y=Math.atan2(-c,n),this._z=0);break;case"ZXY":this._x=Math.asin(N(u,-1,1)),Math.abs(u)<.9999999?(this._y=Math.atan2(-c,f),this._z=Math.atan2(-r,o)):(this._y=0,this._z=Math.atan2(a,n));break;case"ZYX":this._y=Math.asin(-N(c,-1,1)),Math.abs(c)<.9999999?(this._x=Math.atan2(u,f),this._z=Math.atan2(a,n)):(this._x=0,this._z=Math.atan2(-r,o));break;case"YZX":this._z=Math.asin(N(a,-1,1)),Math.abs(a)<.9999999?(this._x=Math.atan2(-l,o),this._y=Math.atan2(-c,n)):(this._x=0,this._y=Math.atan2(h,f));break;case"XZY":this._z=Math.asin(-N(r,-1,1)),Math.abs(r)<.9999999?(this._x=Math.atan2(u,o),this._y=Math.atan2(h,n)):(this._x=Math.atan2(-l,f),this._y=0);break;default:console.warn("THREE.Euler: .setFromRotationMatrix() encountered an unknown order: "+e)}return this._order=e,i===!0&&this._onChangeCallback(),this}setFromQuaternion(t,e,i){return Ni.makeRotationFromQuaternion(t),this.setFromRotationMatrix(Ni,e,i)}setFromVector3(t,e=this._order){return this.set(t.x,t.y,t.z,e)}reorder(t){return Wi.setFromEuler(this),this.setFromQuaternion(Wi,t)}equals(t){return t._x===this._x&&t._y===this._y&&t._z===this._z&&t._order===this._order}fromArray(t){return this._x=t[0],this._y=t[1],this._z=t[2],t[3]!==void 0&&(this._order=t[3]),this._onChangeCallback(),this}toArray(t=[],e=0){return t[e]=this._x,t[e+1]=this._y,t[e+2]=this._z,t[e+3]=this._order,t}_onChange(t){return this._onChangeCallback=t,this}_onChangeCallback(){}*[Symbol.iterator](){yield this._x,yield this._y,yield this._z,yield this._order}}Oe.DEFAULT_ORDER="XYZ";class Ms{constructor(){this.mask=1}set(t){this.mask=(1<<t|0)>>>0}enable(t){this.mask|=1<<t|0}enableAll(){this.mask=-1}toggle(t){this.mask^=1<<t|0}disable(t){this.mask&=~(1<<t|0)}disableAll(){this.mask=0}test(t){return(this.mask&t.mask)!==0}isEnabled(t){return(this.mask&(1<<t|0))!==0}}let Ys=0;const Hi=new x,kt=new ee,ht=new X,fe=new x,Xt=new x,$s=new x,Js=new ee,ji=new x(1,0,0),Gi=new x(0,1,0),Xi=new x(0,0,1),Zs={type:"added"},Qs={type:"removed"};class rt extends Kt{constructor(){super(),this.isObject3D=!0,Object.defineProperty(this,"id",{value:Ys++}),this.uuid=te(),this.name="",this.type="Object3D",this.parent=null,this.children=[],this.up=rt.DEFAULT_UP.clone();const t=new x,e=new Oe,i=new ee,s=new x(1,1,1);function n(){i.setFromEuler(e,!1)}function r(){e.setFromQuaternion(i,void 0,!1)}e._onChange(n),i._onChange(r),Object.defineProperties(this,{position:{configurable:!0,enumerable:!0,value:t},rotation:{configurable:!0,enumerable:!0,value:e},quaternion:{configurable:!0,enumerable:!0,value:i},scale:{configurable:!0,enumerable:!0,value:s},modelViewMatrix:{value:new X},normalMatrix:{value:new wt}}),this.matrix=new X,this.matrixWorld=new X,this.matrixAutoUpdate=rt.DEFAULT_MATRIX_AUTO_UPDATE,this.matrixWorldAutoUpdate=rt.DEFAULT_MATRIX_WORLD_AUTO_UPDATE,this.matrixWorldNeedsUpdate=!1,this.layers=new Ms,this.visible=!0,this.castShadow=!1,this.receiveShadow=!1,this.frustumCulled=!0,this.renderOrder=0,this.animations=[],this.userData={}}onBeforeShadow(){}onAfterShadow(){}onBeforeRender(){}onAfterRender(){}applyMatrix4(t){this.matrixAutoUpdate&&this.updateMatrix(),this.matrix.premultiply(t),this.matrix.decompose(this.position,this.quaternion,this.scale)}applyQuaternion(t){return this.quaternion.premultiply(t),this}setRotationFromAxisAngle(t,e){this.quaternion.setFromAxisAngle(t,e)}setRotationFromEuler(t){this.quaternion.setFromEuler(t,!0)}setRotationFromMatrix(t){this.quaternion.setFromRotationMatrix(t)}setRotationFromQuaternion(t){this.quaternion.copy(t)}rotateOnAxis(t,e){return kt.setFromAxisAngle(t,e),this.quaternion.multiply(kt),this}rotateOnWorldAxis(t,e){return kt.setFromAxisAngle(t,e),this.quaternion.premultiply(kt),this}rotateX(t){return this.rotateOnAxis(ji,t)}rotateY(t){return this.rotateOnAxis(Gi,t)}rotateZ(t){return this.rotateOnAxis(Xi,t)}translateOnAxis(t,e){return Hi.copy(t).applyQuaternion(this.quaternion),this.position.add(Hi.multiplyScalar(e)),this}translateX(t){return this.translateOnAxis(ji,t)}translateY(t){return this.translateOnAxis(Gi,t)}translateZ(t){return this.translateOnAxis(Xi,t)}localToWorld(t){return this.updateWorldMatrix(!0,!1),t.applyMatrix4(this.matrixWorld)}worldToLocal(t){return this.updateWorldMatrix(!0,!1),t.applyMatrix4(ht.copy(this.matrixWorld).invert())}lookAt(t,e,i){t.isVector3?fe.copy(t):fe.set(t,e,i);const s=this.parent;this.updateWorldMatrix(!0,!1),Xt.setFromMatrixPosition(this.matrixWorld),this.isCamera||this.isLight?ht.lookAt(Xt,fe,this.up):ht.lookAt(fe,Xt,this.up),this.quaternion.setFromRotationMatrix(ht),s&&(ht.extractRotation(s.matrixWorld),kt.setFromRotationMatrix(ht),this.quaternion.premultiply(kt.invert()))}add(t){if(arguments.length>1){for(let e=0;e<arguments.length;e++)this.add(arguments[e]);return this}return t===this?(console.error("THREE.Object3D.add: object can't be added as a child of itself.",t),this):(t&&t.isObject3D?(t.parent!==null&&t.parent.remove(t),t.parent=this,this.children.push(t),t.dispatchEvent(Zs)):console.error("THREE.Object3D.add: object not an instance of THREE.Object3D.",t),this)}remove(t){if(arguments.length>1){for(let i=0;i<arguments.length;i++)this.remove(arguments[i]);return this}const e=this.children.indexOf(t);return e!==-1&&(t.parent=null,this.children.splice(e,1),t.dispatchEvent(Qs)),this}removeFromParent(){const t=this.parent;return t!==null&&t.remove(this),this}clear(){return this.remove(...this.children)}attach(t){return this.updateWorldMatrix(!0,!1),ht.copy(this.matrixWorld).invert(),t.parent!==null&&(t.parent.updateWorldMatrix(!0,!1),ht.multiply(t.parent.matrixWorld)),t.applyMatrix4(ht),this.add(t),t.updateWorldMatrix(!1,!0),this}getObjectById(t){return this.getObjectByProperty("id",t)}getObjectByName(t){return this.getObjectByProperty("name",t)}getObjectByProperty(t,e){if(this[t]===e)return this;for(let i=0,s=this.children.length;i<s;i++){const r=this.children[i].getObjectByProperty(t,e);if(r!==void 0)return r}}getObjectsByProperty(t,e,i=[]){this[t]===e&&i.push(this);const s=this.children;for(let n=0,r=s.length;n<r;n++)s[n].getObjectsByProperty(t,e,i);return i}getWorldPosition(t){return this.updateWorldMatrix(!0,!1),t.setFromMatrixPosition(this.matrixWorld)}getWorldQuaternion(t){return this.updateWorldMatrix(!0,!1),this.matrixWorld.decompose(Xt,t,$s),t}getWorldScale(t){return this.updateWorldMatrix(!0,!1),this.matrixWorld.decompose(Xt,Js,t),t}getWorldDirection(t){this.updateWorldMatrix(!0,!1);const e=this.matrixWorld.elements;return t.set(e[8],e[9],e[10]).normalize()}raycast(){}traverse(t){t(this);const e=this.children;for(let i=0,s=e.length;i<s;i++)e[i].traverse(t)}traverseVisible(t){if(this.visible===!1)return;t(this);const e=this.children;for(let i=0,s=e.length;i<s;i++)e[i].traverseVisible(t)}traverseAncestors(t){const e=this.parent;e!==null&&(t(e),e.traverseAncestors(t))}updateMatrix(){this.matrix.compose(this.position,this.quaternion,this.scale),this.matrixWorldNeedsUpdate=!0}updateMatrixWorld(t){this.matrixAutoUpdate&&this.updateMatrix(),(this.matrixWorldNeedsUpdate||t)&&(this.parent===null?this.matrixWorld.copy(this.matrix):this.matrixWorld.multiplyMatrices(this.parent.matrixWorld,this.matrix),this.matrixWorldNeedsUpdate=!1,t=!0);const e=this.children;for(let i=0,s=e.length;i<s;i++){const n=e[i];(n.matrixWorldAutoUpdate===!0||t===!0)&&n.updateMatrixWorld(t)}}updateWorldMatrix(t,e){const i=this.parent;if(t===!0&&i!==null&&i.matrixWorldAutoUpdate===!0&&i.updateWorldMatrix(!0,!1),this.matrixAutoUpdate&&this.updateMatrix(),this.parent===null?this.matrixWorld.copy(this.matrix):this.matrixWorld.multiplyMatrices(this.parent.matrixWorld,this.matrix),e===!0){const s=this.children;for(let n=0,r=s.length;n<r;n++){const h=s[n];h.matrixWorldAutoUpdate===!0&&h.updateWorldMatrix(!1,!0)}}}toJSON(t){const e=t===void 0||typeof t=="string",i={};e&&(t={geometries:{},materials:{},textures:{},images:{},shapes:{},skeletons:{},animations:{},nodes:{}},i.metadata={version:4.6,type:"Object",generator:"Object3D.toJSON"});const s={};s.uuid=this.uuid,s.type=this.type,this.name!==""&&(s.name=this.name),this.castShadow===!0&&(s.castShadow=!0),this.receiveShadow===!0&&(s.receiveShadow=!0),this.visible===!1&&(s.visible=!1),this.frustumCulled===!1&&(s.frustumCulled=!1),this.renderOrder!==0&&(s.renderOrder=this.renderOrder),Object.keys(this.userData).length>0&&(s.userData=this.userData),s.layers=this.layers.mask,s.matrix=this.matrix.toArray(),s.up=this.up.toArray(),this.matrixAutoUpdate===!1&&(s.matrixAutoUpdate=!1),this.isInstancedMesh&&(s.type="InstancedMesh",s.count=this.count,s.instanceMatrix=this.instanceMatrix.toJSON(),this.instanceColor!==null&&(s.instanceColor=this.instanceColor.toJSON())),this.isBatchedMesh&&(s.type="BatchedMesh",s.perObjectFrustumCulled=this.perObjectFrustumCulled,s.sortObjects=this.sortObjects,s.drawRanges=this._drawRanges,s.reservedRanges=this._reservedRanges,s.visibility=this._visibility,s.active=this._active,s.bounds=this._bounds.map(h=>({boxInitialized:h.boxInitialized,boxMin:h.box.min.toArray(),boxMax:h.box.max.toArray(),sphereInitialized:h.sphereInitialized,sphereRadius:h.sphere.radius,sphereCenter:h.sphere.center.toArray()})),s.maxGeometryCount=this._maxGeometryCount,s.maxVertexCount=this._maxVertexCount,s.maxIndexCount=this._maxIndexCount,s.geometryInitialized=this._geometryInitialized,s.geometryCount=this._geometryCount,s.matricesTexture=this._matricesTexture.toJSON(t),this.boundingSphere!==null&&(s.boundingSphere={center:s.boundingSphere.center.toArray(),radius:s.boundingSphere.radius}),this.boundingBox!==null&&(s.boundingBox={min:s.boundingBox.min.toArray(),max:s.boundingBox.max.toArray()}));function n(h,a){return h[a.uuid]===void 0&&(h[a.uuid]=a.toJSON(t)),a.uuid}if(this.isScene)this.background&&(this.background.isColor?s.background=this.background.toJSON():this.background.isTexture&&(s.background=this.background.toJSON(t).uuid)),this.environment&&this.environment.isTexture&&this.environment.isRenderTargetTexture!==!0&&(s.environment=this.environment.toJSON(t).uuid);else if(this.isMesh||this.isLine||this.isPoints){s.geometry=n(t.geometries,this.geometry);const h=this.geometry.parameters;if(h!==void 0&&h.shapes!==void 0){const a=h.shapes;if(Array.isArray(a))for(let o=0,l=a.length;o<l;o++){const c=a[o];n(t.shapes,c)}else n(t.shapes,a)}}if(this.isSkinnedMesh&&(s.bindMode=this.bindMode,s.bindMatrix=this.bindMatrix.toArray(),this.skeleton!==void 0&&(n(t.skeletons,this.skeleton),s.skeleton=this.skeleton.uuid)),this.material!==void 0)if(Array.isArray(this.material)){const h=[];for(let a=0,o=this.material.length;a<o;a++)h.push(n(t.materials,this.material[a]));s.material=h}else s.material=n(t.materials,this.material);if(this.children.length>0){s.children=[];for(let h=0;h<this.children.length;h++)s.children.push(this.children[h].toJSON(t).object)}if(this.animations.length>0){s.animations=[];for(let h=0;h<this.animations.length;h++){const a=this.animations[h];s.animations.push(n(t.animations,a))}}if(e){const h=r(t.geometries),a=r(t.materials),o=r(t.textures),l=r(t.images),c=r(t.shapes),u=r(t.skeletons),f=r(t.animations),m=r(t.nodes);h.length>0&&(i.geometries=h),a.length>0&&(i.materials=a),o.length>0&&(i.textures=o),l.length>0&&(i.images=l),c.length>0&&(i.shapes=c),u.length>0&&(i.skeletons=u),f.length>0&&(i.animations=f),m.length>0&&(i.nodes=m)}return i.object=s,i;function r(h){const a=[];for(const o in h){const l=h[o];delete l.metadata,a.push(l)}return a}}clone(t){return new this.constructor().copy(this,t)}copy(t,e=!0){if(this.name=t.name,this.up.copy(t.up),this.position.copy(t.position),this.rotation.order=t.rotation.order,this.quaternion.copy(t.quaternion),this.scale.copy(t.scale),this.matrix.copy(t.matrix),this.matrixWorld.copy(t.matrixWorld),this.matrixAutoUpdate=t.matrixAutoUpdate,this.matrixWorldAutoUpdate=t.matrixWorldAutoUpdate,this.matrixWorldNeedsUpdate=t.matrixWorldNeedsUpdate,this.layers.mask=t.layers.mask,this.visible=t.visible,this.castShadow=t.castShadow,this.receiveShadow=t.receiveShadow,this.frustumCulled=t.frustumCulled,this.renderOrder=t.renderOrder,this.animations=t.animations.slice(),this.userData=JSON.parse(JSON.stringify(t.userData)),e===!0)for(let i=0;i<t.children.length;i++){const s=t.children[i];this.add(s.clone())}return this}}rt.DEFAULT_UP=new x(0,1,0);rt.DEFAULT_MATRIX_AUTO_UPDATE=!0;rt.DEFAULT_MATRIX_WORLD_AUTO_UPDATE=!0;const it=new x,lt=new x,Je=new x,ct=new x,It=new x,Dt=new x,Yi=new x,Ze=new x,Qe=new x,Ke=new x;let me=!1;class st{constructor(t=new x,e=new x,i=new x){this.a=t,this.b=e,this.c=i}static getNormal(t,e,i,s){s.subVectors(i,e),it.subVectors(t,e),s.cross(it);const n=s.lengthSq();return n>0?s.multiplyScalar(1/Math.sqrt(n)):s.set(0,0,0)}static getBarycoord(t,e,i,s,n){it.subVectors(s,e),lt.subVectors(i,e),Je.subVectors(t,e);const r=it.dot(it),h=it.dot(lt),a=it.dot(Je),o=lt.dot(lt),l=lt.dot(Je),c=r*o-h*h;if(c===0)return n.set(0,0,0),null;const u=1/c,f=(o*a-h*l)*u,m=(r*l-h*a)*u;return n.set(1-f-m,m,f)}static containsPoint(t,e,i,s){return this.getBarycoord(t,e,i,s,ct)===null?!1:ct.x>=0&&ct.y>=0&&ct.x+ct.y<=1}static getUV(t,e,i,s,n,r,h,a){return me===!1&&(console.warn("THREE.Triangle.getUV() has been renamed to THREE.Triangle.getInterpolation()."),me=!0),this.getInterpolation(t,e,i,s,n,r,h,a)}static getInterpolation(t,e,i,s,n,r,h,a){return this.getBarycoord(t,e,i,s,ct)===null?(a.x=0,a.y=0,"z"in a&&(a.z=0),"w"in a&&(a.w=0),null):(a.setScalar(0),a.addScaledVector(n,ct.x),a.addScaledVector(r,ct.y),a.addScaledVector(h,ct.z),a)}static isFrontFacing(t,e,i,s){return it.subVectors(i,e),lt.subVectors(t,e),it.cross(lt).dot(s)<0}set(t,e,i){return this.a.copy(t),this.b.copy(e),this.c.copy(i),this}setFromPointsAndIndices(t,e,i,s){return this.a.copy(t[e]),this.b.copy(t[i]),this.c.copy(t[s]),this}setFromAttributeAndIndices(t,e,i,s){return this.a.fromBufferAttribute(t,e),this.b.fromBufferAttribute(t,i),this.c.fromBufferAttribute(t,s),this}clone(){return new this.constructor().copy(this)}copy(t){return this.a.copy(t.a),this.b.copy(t.b),this.c.copy(t.c),this}getArea(){return it.subVectors(this.c,this.b),lt.subVectors(this.a,this.b),it.cross(lt).length()*.5}getMidpoint(t){return t.addVectors(this.a,this.b).add(this.c).multiplyScalar(1/3)}getNormal(t){return st.getNormal(this.a,this.b,this.c,t)}getPlane(t){return t.setFromCoplanarPoints(this.a,this.b,this.c)}getBarycoord(t,e){return st.getBarycoord(t,this.a,this.b,this.c,e)}getUV(t,e,i,s,n){return me===!1&&(console.warn("THREE.Triangle.getUV() has been renamed to THREE.Triangle.getInterpolation()."),me=!0),st.getInterpolation(t,this.a,this.b,this.c,e,i,s,n)}getInterpolation(t,e,i,s,n){return st.getInterpolation(t,this.a,this.b,this.c,e,i,s,n)}containsPoint(t){return st.containsPoint(t,this.a,this.b,this.c)}isFrontFacing(t){return st.isFrontFacing(this.a,this.b,this.c,t)}intersectsBox(t){return t.intersectsTriangle(this)}closestPointToPoint(t,e){const i=this.a,s=this.b,n=this.c;let r,h;It.subVectors(s,i),Dt.subVectors(n,i),Ze.subVectors(t,i);const a=It.dot(Ze),o=Dt.dot(Ze);if(a<=0&&o<=0)return e.copy(i);Qe.subVectors(t,s);const l=It.dot(Qe),c=Dt.dot(Qe);if(l>=0&&c<=l)return e.copy(s);const u=a*c-l*o;if(u<=0&&a>=0&&l<=0)return r=a/(a-l),e.copy(i).addScaledVector(It,r);Ke.subVectors(t,n);const f=It.dot(Ke),m=Dt.dot(Ke);if(m>=0&&f<=m)return e.copy(n);const p=f*o-a*m;if(p<=0&&o>=0&&m<=0)return h=o/(o-m),e.copy(i).addScaledVector(Dt,h);const y=l*m-f*c;if(y<=0&&c-l>=0&&f-m>=0)return Yi.subVectors(n,s),h=(c-l)/(c-l+(f-m)),e.copy(s).addScaledVector(Yi,h);const g=1/(y+p+u);return r=p*g,h=u*g,e.copy(i).addScaledVector(It,r).addScaledVector(Dt,h)}equals(t){return t.a.equals(this.a)&&t.b.equals(this.b)&&t.c.equals(this.c)}}const bs={aliceblue:15792383,antiquewhite:16444375,aqua:65535,aquamarine:8388564,azure:15794175,beige:16119260,bisque:16770244,black:0,blanchedalmond:16772045,blue:255,blueviolet:9055202,brown:10824234,burlywood:14596231,cadetblue:6266528,chartreuse:8388352,chocolate:13789470,coral:16744272,cornflowerblue:6591981,cornsilk:16775388,crimson:14423100,cyan:65535,darkblue:139,darkcyan:35723,darkgoldenrod:12092939,darkgray:11119017,darkgreen:25600,darkgrey:11119017,darkkhaki:12433259,darkmagenta:9109643,darkolivegreen:5597999,darkorange:16747520,darkorchid:10040012,darkred:9109504,darksalmon:15308410,darkseagreen:9419919,darkslateblue:4734347,darkslategray:3100495,darkslategrey:3100495,darkturquoise:52945,darkviolet:9699539,deeppink:16716947,deepskyblue:49151,dimgray:6908265,dimgrey:6908265,dodgerblue:2003199,firebrick:11674146,floralwhite:16775920,forestgreen:2263842,fuchsia:16711935,gainsboro:14474460,ghostwhite:16316671,gold:16766720,goldenrod:14329120,gray:8421504,green:32768,greenyellow:11403055,grey:8421504,honeydew:15794160,hotpink:16738740,indianred:13458524,indigo:4915330,ivory:16777200,khaki:15787660,lavender:15132410,lavenderblush:16773365,lawngreen:8190976,lemonchiffon:16775885,lightblue:11393254,lightcoral:15761536,lightcyan:14745599,lightgoldenrodyellow:16448210,lightgray:13882323,lightgreen:9498256,lightgrey:13882323,lightpink:16758465,lightsalmon:16752762,lightseagreen:2142890,lightskyblue:8900346,lightslategray:7833753,lightslategrey:7833753,lightsteelblue:11584734,lightyellow:16777184,lime:65280,limegreen:3329330,linen:16445670,magenta:16711935,maroon:8388608,mediumaquamarine:6737322,mediumblue:205,mediumorchid:12211667,mediumpurple:9662683,mediumseagreen:3978097,mediumslateblue:8087790,mediumspringgreen:64154,mediumturquoise:4772300,mediumvioletred:13047173,midnightblue:1644912,mintcream:16121850,mistyrose:16770273,moccasin:16770229,navajowhite:16768685,navy:128,oldlace:16643558,olive:8421376,olivedrab:7048739,orange:16753920,orangered:16729344,orchid:14315734,palegoldenrod:15657130,palegreen:10025880,paleturquoise:11529966,palevioletred:14381203,papayawhip:16773077,peachpuff:16767673,peru:13468991,pink:16761035,plum:14524637,powderblue:11591910,purple:8388736,rebeccapurple:6697881,red:16711680,rosybrown:12357519,royalblue:4286945,saddlebrown:9127187,salmon:16416882,sandybrown:16032864,seagreen:3050327,seashell:16774638,sienna:10506797,silver:12632256,skyblue:8900331,slateblue:6970061,slategray:7372944,slategrey:7372944,snow:16775930,springgreen:65407,steelblue:4620980,tan:13808780,teal:32896,thistle:14204888,tomato:16737095,turquoise:4251856,violet:15631086,wheat:16113331,white:16777215,whitesmoke:16119285,yellow:16776960,yellowgreen:10145074},bt={h:0,s:0,l:0},pe={h:0,s:0,l:0};function ti(d,t,e){return e<0&&(e+=1),e>1&&(e-=1),e<1/6?d+(t-d)*6*e:e<1/2?t:e<2/3?d+(t-d)*6*(2/3-e):d}class se{constructor(t,e,i){return this.isColor=!0,this.r=1,this.g=1,this.b=1,this.set(t,e,i)}set(t,e,i){if(e===void 0&&i===void 0){const s=t;s&&s.isColor?this.copy(s):typeof s=="number"?this.setHex(s):typeof s=="string"&&this.setStyle(s)}else this.setRGB(t,e,i);return this}setScalar(t){return this.r=t,this.g=t,this.b=t,this}setHex(t,e=Z){return t=Math.floor(t),this.r=(t>>16&255)/255,this.g=(t>>8&255)/255,this.b=(t&255)/255,K.toWorkingColorSpace(this,e),this}setRGB(t,e,i,s=K.workingColorSpace){return this.r=t,this.g=e,this.b=i,K.toWorkingColorSpace(this,s),this}setHSL(t,e,i,s=K.workingColorSpace){if(t=Os(t,1),e=N(e,0,1),i=N(i,0,1),e===0)this.r=this.g=this.b=i;else{const n=i<=.5?i*(1+e):i+e-i*e,r=2*i-n;this.r=ti(r,n,t+1/3),this.g=ti(r,n,t),this.b=ti(r,n,t-1/3)}return K.toWorkingColorSpace(this,s),this}setStyle(t,e=Z){function i(n){n!==void 0&&parseFloat(n)<1&&console.warn("THREE.Color: Alpha component of "+t+" will be ignored.")}let s;if(s=/^(\w+)\(([^\)]*)\)/.exec(t)){let n;const r=s[1],h=s[2];switch(r){case"rgb":case"rgba":if(n=/^\s*(\d+)\s*,\s*(\d+)\s*,\s*(\d+)\s*(?:,\s*(\d*\.?\d+)\s*)?$/.exec(h))return i(n[4]),this.setRGB(Math.min(255,parseInt(n[1],10))/255,Math.min(255,parseInt(n[2],10))/255,Math.min(255,parseInt(n[3],10))/255,e);if(n=/^\s*(\d+)\%\s*,\s*(\d+)\%\s*,\s*(\d+)\%\s*(?:,\s*(\d*\.?\d+)\s*)?$/.exec(h))return i(n[4]),this.setRGB(Math.min(100,parseInt(n[1],10))/100,Math.min(100,parseInt(n[2],10))/100,Math.min(100,parseInt(n[3],10))/100,e);break;case"hsl":case"hsla":if(n=/^\s*(\d*\.?\d+)\s*,\s*(\d*\.?\d+)\%\s*,\s*(\d*\.?\d+)\%\s*(?:,\s*(\d*\.?\d+)\s*)?$/.exec(h))return i(n[4]),this.setHSL(parseFloat(n[1])/360,parseFloat(n[2])/100,parseFloat(n[3])/100,e);break;default:console.warn("THREE.Color: Unknown color model "+t)}}else if(s=/^\#([A-Fa-f\d]+)$/.exec(t)){const n=s[1],r=n.length;if(r===3)return this.setRGB(parseInt(n.charAt(0),16)/15,parseInt(n.charAt(1),16)/15,parseInt(n.charAt(2),16)/15,e);if(r===6)return this.setHex(parseInt(n,16),e);console.warn("THREE.Color: Invalid hex color "+t)}else if(t&&t.length>0)return this.setColorName(t,e);return this}setColorName(t,e=Z){const i=bs[t.toLowerCase()];return i!==void 0?this.setHex(i,e):console.warn("THREE.Color: Unknown color "+t),this}clone(){return new this.constructor(this.r,this.g,this.b)}copy(t){return this.r=t.r,this.g=t.g,this.b=t.b,this}copySRGBToLinear(t){return this.r=Wt(t.r),this.g=Wt(t.g),this.b=Wt(t.b),this}copyLinearToSRGB(t){return this.r=Ne(t.r),this.g=Ne(t.g),this.b=Ne(t.b),this}convertSRGBToLinear(){return this.copySRGBToLinear(this),this}convertLinearToSRGB(){return this.copyLinearToSRGB(this),this}getHex(t=Z){return K.fromWorkingColorSpace(V.copy(this),t),Math.round(N(V.r*255,0,255))*65536+Math.round(N(V.g*255,0,255))*256+Math.round(N(V.b*255,0,255))}getHexString(t=Z){return("000000"+this.getHex(t).toString(16)).slice(-6)}getHSL(t,e=K.workingColorSpace){K.fromWorkingColorSpace(V.copy(this),e);const i=V.r,s=V.g,n=V.b,r=Math.max(i,s,n),h=Math.min(i,s,n);let a,o;const l=(h+r)/2;if(h===r)a=0,o=0;else{const c=r-h;switch(o=l<=.5?c/(r+h):c/(2-r-h),r){case i:a=(s-n)/c+(s<n?6:0);break;case s:a=(n-i)/c+2;break;case n:a=(i-s)/c+4;break}a/=6}return t.h=a,t.s=o,t.l=l,t}getRGB(t,e=K.workingColorSpace){return K.fromWorkingColorSpace(V.copy(this),e),t.r=V.r,t.g=V.g,t.b=V.b,t}getStyle(t=Z){K.fromWorkingColorSpace(V.copy(this),t);const e=V.r,i=V.g,s=V.b;return t!==Z?`color(${t} ${e.toFixed(3)} ${i.toFixed(3)} ${s.toFixed(3)})`:`rgb(${Math.round(e*255)},${Math.round(i*255)},${Math.round(s*255)})`}offsetHSL(t,e,i){return this.getHSL(bt),this.setHSL(bt.h+t,bt.s+e,bt.l+i)}add(t){return this.r+=t.r,this.g+=t.g,this.b+=t.b,this}addColors(t,e){return this.r=t.r+e.r,this.g=t.g+e.g,this.b=t.b+e.b,this}addScalar(t){return this.r+=t,this.g+=t,this.b+=t,this}sub(t){return this.r=Math.max(0,this.r-t.r),this.g=Math.max(0,this.g-t.g),this.b=Math.max(0,this.b-t.b),this}multiply(t){return this.r*=t.r,this.g*=t.g,this.b*=t.b,this}multiplyScalar(t){return this.r*=t,this.g*=t,this.b*=t,this}lerp(t,e){return this.r+=(t.r-this.r)*e,this.g+=(t.g-this.g)*e,this.b+=(t.b-this.b)*e,this}lerpColors(t,e,i){return this.r=t.r+(e.r-t.r)*i,this.g=t.g+(e.g-t.g)*i,this.b=t.b+(e.b-t.b)*i,this}lerpHSL(t,e){this.getHSL(bt),t.getHSL(pe);const i=Ve(bt.h,pe.h,e),s=Ve(bt.s,pe.s,e),n=Ve(bt.l,pe.l,e);return this.setHSL(i,s,n),this}setFromVector3(t){return this.r=t.x,this.g=t.y,this.b=t.z,this}applyMatrix3(t){const e=this.r,i=this.g,s=this.b,n=t.elements;return this.r=n[0]*e+n[3]*i+n[6]*s,this.g=n[1]*e+n[4]*i+n[7]*s,this.b=n[2]*e+n[5]*i+n[8]*s,this}equals(t){return t.r===this.r&&t.g===this.g&&t.b===this.b}fromArray(t,e=0){return this.r=t[e],this.g=t[e+1],this.b=t[e+2],this}toArray(t=[],e=0){return t[e]=this.r,t[e+1]=this.g,t[e+2]=this.b,t}fromBufferAttribute(t,e){return this.r=t.getX(e),this.g=t.getY(e),this.b=t.getZ(e),this}toJSON(){return this.getHex()}*[Symbol.iterator](){yield this.r,yield this.g,yield this.b}}const V=new se;se.NAMES=bs;let Ks=0;class ws extends Kt{constructor(){super(),this.isMaterial=!0,Object.defineProperty(this,"id",{value:Ks++}),this.uuid=te(),this.name="",this.type="Material",this.blending=bi,this.side=li,this.vertexColors=!1,this.opacity=1,this.transparent=!1,this.alphaHash=!1,this.blendSrc=_i,this.blendDst=zi,this.blendEquation=wi,this.blendSrcAlpha=null,this.blendDstAlpha=null,this.blendEquationAlpha=null,this.blendColor=new se(0,0,0),this.blendAlpha=0,this.depthFunc=Si,this.depthTest=!0,this.depthWrite=!0,this.stencilWriteMask=255,this.stencilFunc=ki,this.stencilRef=0,this.stencilFuncMask=255,this.stencilFail=Tt,this.stencilZFail=Tt,this.stencilZPass=Tt,this.stencilWrite=!1,this.clippingPlanes=null,this.clipIntersection=!1,this.clipShadows=!1,this.shadowSide=null,this.colorWrite=!0,this.precision=null,this.polygonOffset=!1,this.polygonOffsetFactor=0,this.polygonOffsetUnits=0,this.dithering=!1,this.alphaToCoverage=!1,this.premultipliedAlpha=!1,this.forceSinglePass=!1,this.visible=!0,this.toneMapped=!0,this.userData={},this.version=0,this._alphaTest=0}get alphaTest(){return this._alphaTest}set alphaTest(t){this._alphaTest>0!=t>0&&this.version++,this._alphaTest=t}onBuild(){}onBeforeRender(){}onBeforeCompile(){}customProgramCacheKey(){return this.onBeforeCompile.toString()}setValues(t){if(t!==void 0)for(const e in t){const i=t[e];if(i===void 0){console.warn(`THREE.Material: parameter '${e}' has value of undefined.`);continue}const s=this[e];if(s===void 0){console.warn(`THREE.Material: '${e}' is not a property of THREE.${this.type}.`);continue}s&&s.isColor?s.set(i):s&&s.isVector3&&i&&i.isVector3?s.copy(i):this[e]=i}}toJSON(t){const e=t===void 0||typeof t=="string";e&&(t={textures:{},images:{}});const i={metadata:{version:4.6,type:"Material",generator:"Material.toJSON"}};i.uuid=this.uuid,i.type=this.type,this.name!==""&&(i.name=this.name),this.color&&this.color.isColor&&(i.color=this.color.getHex()),this.roughness!==void 0&&(i.roughness=this.roughness),this.metalness!==void 0&&(i.metalness=this.metalness),this.sheen!==void 0&&(i.sheen=this.sheen),this.sheenColor&&this.sheenColor.isColor&&(i.sheenColor=this.sheenColor.getHex()),this.sheenRoughness!==void 0&&(i.sheenRoughness=this.sheenRoughness),this.emissive&&this.emissive.isColor&&(i.emissive=this.emissive.getHex()),this.emissiveIntensity&&this.emissiveIntensity!==1&&(i.emissiveIntensity=this.emissiveIntensity),this.specular&&this.specular.isColor&&(i.specular=this.specular.getHex()),this.specularIntensity!==void 0&&(i.specularIntensity=this.specularIntensity),this.specularColor&&this.specularColor.isColor&&(i.specularColor=this.specularColor.getHex()),this.shininess!==void 0&&(i.shininess=this.shininess),this.clearcoat!==void 0&&(i.clearcoat=this.clearcoat),this.clearcoatRoughness!==void 0&&(i.clearcoatRoughness=this.clearcoatRoughness),this.clearcoatMap&&this.clearcoatMap.isTexture&&(i.clearcoatMap=this.clearcoatMap.toJSON(t).uuid),this.clearcoatRoughnessMap&&this.clearcoatRoughnessMap.isTexture&&(i.clearcoatRoughnessMap=this.clearcoatRoughnessMap.toJSON(t).uuid),this.clearcoatNormalMap&&this.clearcoatNormalMap.isTexture&&(i.clearcoatNormalMap=this.clearcoatNormalMap.toJSON(t).uuid,i.clearcoatNormalScale=this.clearcoatNormalScale.toArray()),this.iridescence!==void 0&&(i.iridescence=this.iridescence),this.iridescenceIOR!==void 0&&(i.iridescenceIOR=this.iridescenceIOR),this.iridescenceThicknessRange!==void 0&&(i.iridescenceThicknessRange=this.iridescenceThicknessRange),this.iridescenceMap&&this.iridescenceMap.isTexture&&(i.iridescenceMap=this.iridescenceMap.toJSON(t).uuid),this.iridescenceThicknessMap&&this.iridescenceThicknessMap.isTexture&&(i.iridescenceThicknessMap=this.iridescenceThicknessMap.toJSON(t).uuid),this.anisotropy!==void 0&&(i.anisotropy=this.anisotropy),this.anisotropyRotation!==void 0&&(i.anisotropyRotation=this.anisotropyRotation),this.anisotropyMap&&this.anisotropyMap.isTexture&&(i.anisotropyMap=this.anisotropyMap.toJSON(t).uuid),this.map&&this.map.isTexture&&(i.map=this.map.toJSON(t).uuid),this.matcap&&this.matcap.isTexture&&(i.matcap=this.matcap.toJSON(t).uuid),this.alphaMap&&this.alphaMap.isTexture&&(i.alphaMap=this.alphaMap.toJSON(t).uuid),this.lightMap&&this.lightMap.isTexture&&(i.lightMap=this.lightMap.toJSON(t).uuid,i.lightMapIntensity=this.lightMapIntensity),this.aoMap&&this.aoMap.isTexture&&(i.aoMap=this.aoMap.toJSON(t).uuid,i.aoMapIntensity=this.aoMapIntensity),this.bumpMap&&this.bumpMap.isTexture&&(i.bumpMap=this.bumpMap.toJSON(t).uuid,i.bumpScale=this.bumpScale),this.normalMap&&this.normalMap.isTexture&&(i.normalMap=this.normalMap.toJSON(t).uuid,i.normalMapType=this.normalMapType,i.normalScale=this.normalScale.toArray()),this.displacementMap&&this.displacementMap.isTexture&&(i.displacementMap=this.displacementMap.toJSON(t).uuid,i.displacementScale=this.displacementScale,i.displacementBias=this.displacementBias),this.roughnessMap&&this.roughnessMap.isTexture&&(i.roughnessMap=this.roughnessMap.toJSON(t).uuid),this.metalnessMap&&this.metalnessMap.isTexture&&(i.metalnessMap=this.metalnessMap.toJSON(t).uuid),this.emissiveMap&&this.emissiveMap.isTexture&&(i.emissiveMap=this.emissiveMap.toJSON(t).uuid),this.specularMap&&this.specularMap.isTexture&&(i.specularMap=this.specularMap.toJSON(t).uuid),this.specularIntensityMap&&this.specularIntensityMap.isTexture&&(i.specularIntensityMap=this.specularIntensityMap.toJSON(t).uuid),this.specularColorMap&&this.specularColorMap.isTexture&&(i.specularColorMap=this.specularColorMap.toJSON(t).uuid),this.envMap&&this.envMap.isTexture&&(i.envMap=this.envMap.toJSON(t).uuid,this.combine!==void 0&&(i.combine=this.combine)),this.envMapIntensity!==void 0&&(i.envMapIntensity=this.envMapIntensity),this.reflectivity!==void 0&&(i.reflectivity=this.reflectivity),this.refractionRatio!==void 0&&(i.refractionRatio=this.refractionRatio),this.gradientMap&&this.gradientMap.isTexture&&(i.gradientMap=this.gradientMap.toJSON(t).uuid),this.transmission!==void 0&&(i.transmission=this.transmission),this.transmissionMap&&this.transmissionMap.isTexture&&(i.transmissionMap=this.transmissionMap.toJSON(t).uuid),this.thickness!==void 0&&(i.thickness=this.thickness),this.thicknessMap&&this.thicknessMap.isTexture&&(i.thicknessMap=this.thicknessMap.toJSON(t).uuid),this.attenuationDistance!==void 0&&this.attenuationDistance!==1/0&&(i.attenuationDistance=this.attenuationDistance),this.attenuationColor!==void 0&&(i.attenuationColor=this.attenuationColor.getHex()),this.size!==void 0&&(i.size=this.size),this.shadowSide!==null&&(i.shadowSide=this.shadowSide),this.sizeAttenuation!==void 0&&(i.sizeAttenuation=this.sizeAttenuation),this.blending!==bi&&(i.blending=this.blending),this.side!==li&&(i.side=this.side),this.vertexColors===!0&&(i.vertexColors=!0),this.opacity<1&&(i.opacity=this.opacity),this.transparent===!0&&(i.transparent=!0),this.blendSrc!==_i&&(i.blendSrc=this.blendSrc),this.blendDst!==zi&&(i.blendDst=this.blendDst),this.blendEquation!==wi&&(i.blendEquation=this.blendEquation),this.blendSrcAlpha!==null&&(i.blendSrcAlpha=this.blendSrcAlpha),this.blendDstAlpha!==null&&(i.blendDstAlpha=this.blendDstAlpha),this.blendEquationAlpha!==null&&(i.blendEquationAlpha=this.blendEquationAlpha),this.blendColor&&this.blendColor.isColor&&(i.blendColor=this.blendColor.getHex()),this.blendAlpha!==0&&(i.blendAlpha=this.blendAlpha),this.depthFunc!==Si&&(i.depthFunc=this.depthFunc),this.depthTest===!1&&(i.depthTest=this.depthTest),this.depthWrite===!1&&(i.depthWrite=this.depthWrite),this.colorWrite===!1&&(i.colorWrite=this.colorWrite),this.stencilWriteMask!==255&&(i.stencilWriteMask=this.stencilWriteMask),this.stencilFunc!==ki&&(i.stencilFunc=this.stencilFunc),this.stencilRef!==0&&(i.stencilRef=this.stencilRef),this.stencilFuncMask!==255&&(i.stencilFuncMask=this.stencilFuncMask),this.stencilFail!==Tt&&(i.stencilFail=this.stencilFail),this.stencilZFail!==Tt&&(i.stencilZFail=this.stencilZFail),this.stencilZPass!==Tt&&(i.stencilZPass=this.stencilZPass),this.stencilWrite===!0&&(i.stencilWrite=this.stencilWrite),this.rotation!==void 0&&this.rotation!==0&&(i.rotation=this.rotation),this.polygonOffset===!0&&(i.polygonOffset=!0),this.polygonOffsetFactor!==0&&(i.polygonOffsetFactor=this.polygonOffsetFactor),this.polygonOffsetUnits!==0&&(i.polygonOffsetUnits=this.polygonOffsetUnits),this.linewidth!==void 0&&this.linewidth!==1&&(i.linewidth=this.linewidth),this.dashSize!==void 0&&(i.dashSize=this.dashSize),this.gapSize!==void 0&&(i.gapSize=this.gapSize),this.scale!==void 0&&(i.scale=this.scale),this.dithering===!0&&(i.dithering=!0),this.alphaTest>0&&(i.alphaTest=this.alphaTest),this.alphaHash===!0&&(i.alphaHash=!0),this.alphaToCoverage===!0&&(i.alphaToCoverage=!0),this.premultipliedAlpha===!0&&(i.premultipliedAlpha=!0),this.forceSinglePass===!0&&(i.forceSinglePass=!0),this.wireframe===!0&&(i.wireframe=!0),this.wireframeLinewidth>1&&(i.wireframeLinewidth=this.wireframeLinewidth),this.wireframeLinecap!=="round"&&(i.wireframeLinecap=this.wireframeLinecap),this.wireframeLinejoin!=="round"&&(i.wireframeLinejoin=this.wireframeLinejoin),this.flatShading===!0&&(i.flatShading=!0),this.visible===!1&&(i.visible=!1),this.toneMapped===!1&&(i.toneMapped=!1),this.fog===!1&&(i.fog=!1),Object.keys(this.userData).length>0&&(i.userData=this.userData);function s(n){const r=[];for(const h in n){const a=n[h];delete a.metadata,r.push(a)}return r}if(e){const n=s(t.textures),r=s(t.images);n.length>0&&(i.textures=n),r.length>0&&(i.images=r)}return i}clone(){return new this.constructor().copy(this)}copy(t){this.name=t.name,this.blending=t.blending,this.side=t.side,this.vertexColors=t.vertexColors,this.opacity=t.opacity,this.transparent=t.transparent,this.blendSrc=t.blendSrc,this.blendDst=t.blendDst,this.blendEquation=t.blendEquation,this.blendSrcAlpha=t.blendSrcAlpha,this.blendDstAlpha=t.blendDstAlpha,this.blendEquationAlpha=t.blendEquationAlpha,this.blendColor.copy(t.blendColor),this.blendAlpha=t.blendAlpha,this.depthFunc=t.depthFunc,this.depthTest=t.depthTest,this.depthWrite=t.depthWrite,this.stencilWriteMask=t.stencilWriteMask,this.stencilFunc=t.stencilFunc,this.stencilRef=t.stencilRef,this.stencilFuncMask=t.stencilFuncMask,this.stencilFail=t.stencilFail,this.stencilZFail=t.stencilZFail,this.stencilZPass=t.stencilZPass,this.stencilWrite=t.stencilWrite;const e=t.clippingPlanes;let i=null;if(e!==null){const s=e.length;i=new Array(s);for(let n=0;n!==s;++n)i[n]=e[n].clone()}return this.clippingPlanes=i,this.clipIntersection=t.clipIntersection,this.clipShadows=t.clipShadows,this.shadowSide=t.shadowSide,this.colorWrite=t.colorWrite,this.precision=t.precision,this.polygonOffset=t.polygonOffset,this.polygonOffsetFactor=t.polygonOffsetFactor,this.polygonOffsetUnits=t.polygonOffsetUnits,this.dithering=t.dithering,this.alphaTest=t.alphaTest,this.alphaHash=t.alphaHash,this.alphaToCoverage=t.alphaToCoverage,this.premultipliedAlpha=t.premultipliedAlpha,this.forceSinglePass=t.forceSinglePass,this.visible=t.visible,this.toneMapped=t.toneMapped,this.userData=JSON.parse(JSON.stringify(t.userData)),this}dispose(){this.dispatchEvent({type:"dispose"})}set needsUpdate(t){t===!0&&this.version++}}class _s extends ws{constructor(t){super(),this.isMeshBasicMaterial=!0,this.type="MeshBasicMaterial",this.color=new se(16777215),this.map=null,this.lightMap=null,this.lightMapIntensity=1,this.aoMap=null,this.aoMapIntensity=1,this.specularMap=null,this.alphaMap=null,this.envMap=null,this.combine=Es,this.reflectivity=1,this.refractionRatio=.98,this.wireframe=!1,this.wireframeLinewidth=1,this.wireframeLinecap="round",this.wireframeLinejoin="round",this.fog=!0,this.setValues(t)}copy(t){return super.copy(t),this.color.copy(t.color),this.map=t.map,this.lightMap=t.lightMap,this.lightMapIntensity=t.lightMapIntensity,this.aoMap=t.aoMap,this.aoMapIntensity=t.aoMapIntensity,this.specularMap=t.specularMap,this.alphaMap=t.alphaMap,this.envMap=t.envMap,this.combine=t.combine,this.reflectivity=t.reflectivity,this.refractionRatio=t.refractionRatio,this.wireframe=t.wireframe,this.wireframeLinewidth=t.wireframeLinewidth,this.wireframeLinecap=t.wireframeLinecap,this.wireframeLinejoin=t.wireframeLinejoin,this.fog=t.fog,this}}const ft=tn();function tn(){const d=new ArrayBuffer(4),t=new Float32Array(d),e=new Uint32Array(d),i=new Uint32Array(512),s=new Uint32Array(512);for(let a=0;a<256;++a){const o=a-127;o<-27?(i[a]=0,i[a|256]=32768,s[a]=24,s[a|256]=24):o<-14?(i[a]=1024>>-o-14,i[a|256]=1024>>-o-14|32768,s[a]=-o-1,s[a|256]=-o-1):o<=15?(i[a]=o+15<<10,i[a|256]=o+15<<10|32768,s[a]=13,s[a|256]=13):o<128?(i[a]=31744,i[a|256]=64512,s[a]=24,s[a|256]=24):(i[a]=31744,i[a|256]=64512,s[a]=13,s[a|256]=13)}const n=new Uint32Array(2048),r=new Uint32Array(64),h=new Uint32Array(64);for(let a=1;a<1024;++a){let o=a<<13,l=0;for(;!(o&8388608);)o<<=1,l-=8388608;o&=-8388609,l+=947912704,n[a]=o|l}for(let a=1024;a<2048;++a)n[a]=939524096+(a-1024<<13);for(let a=1;a<31;++a)r[a]=a<<23;r[31]=1199570944,r[32]=2147483648;for(let a=33;a<63;++a)r[a]=2147483648+(a-32<<23);r[63]=3347054592;for(let a=1;a<64;++a)a!==32&&(h[a]=1024);return{floatView:t,uint32View:e,baseTable:i,shiftTable:s,mantissaTable:n,exponentTable:r,offsetTable:h}}function en(d){Math.abs(d)>65504&&console.warn("THREE.DataUtils.toHalfFloat(): Value out of range."),d=N(d,-65504,65504),ft.floatView[0]=d;const t=ft.uint32View[0],e=t>>23&511;return ft.baseTable[e]+((t&8388607)>>ft.shiftTable[e])}function sn(d){const t=d>>10;return ft.uint32View[0]=ft.mantissaTable[ft.offsetTable[t]+(d&1023)]+ft.exponentTable[t],ft.floatView[0]}const ye={toHalfFloat:en,fromHalfFloat:sn},P=new x,xe=new W;class pt{constructor(t,e,i=!1){if(Array.isArray(t))throw new TypeError("THREE.BufferAttribute: array should be a Typed Array.");this.isBufferAttribute=!0,this.name="",this.array=t,this.itemSize=e,this.count=t!==void 0?t.length/e:0,this.normalized=i,this.usage=Ii,this._updateRange={offset:0,count:-1},this.updateRanges=[],this.gpuType=ve,this.version=0}onUploadCallback(){}set needsUpdate(t){t===!0&&this.version++}get updateRange(){return console.warn("THREE.BufferAttribute: updateRange() is deprecated and will be removed in r169. Use addUpdateRange() instead."),this._updateRange}setUsage(t){return this.usage=t,this}addUpdateRange(t,e){this.updateRanges.push({start:t,count:e})}clearUpdateRanges(){this.updateRanges.length=0}copy(t){return this.name=t.name,this.array=new t.array.constructor(t.array),this.itemSize=t.itemSize,this.count=t.count,this.normalized=t.normalized,this.usage=t.usage,this.gpuType=t.gpuType,this}copyAt(t,e,i){t*=this.itemSize,i*=e.itemSize;for(let s=0,n=this.itemSize;s<n;s++)this.array[t+s]=e.array[i+s];return this}copyArray(t){return this.array.set(t),this}applyMatrix3(t){if(this.itemSize===2)for(let e=0,i=this.count;e<i;e++)xe.fromBufferAttribute(this,e),xe.applyMatrix3(t),this.setXY(e,xe.x,xe.y);else if(this.itemSize===3)for(let e=0,i=this.count;e<i;e++)P.fromBufferAttribute(this,e),P.applyMatrix3(t),this.setXYZ(e,P.x,P.y,P.z);return this}applyMatrix4(t){for(let e=0,i=this.count;e<i;e++)P.fromBufferAttribute(this,e),P.applyMatrix4(t),this.setXYZ(e,P.x,P.y,P.z);return this}applyNormalMatrix(t){for(let e=0,i=this.count;e<i;e++)P.fromBufferAttribute(this,e),P.applyNormalMatrix(t),this.setXYZ(e,P.x,P.y,P.z);return this}transformDirection(t){for(let e=0,i=this.count;e<i;e++)P.fromBufferAttribute(this,e),P.transformDirection(t),this.setXYZ(e,P.x,P.y,P.z);return this}set(t,e=0){return this.array.set(t,e),this}getComponent(t,e){let i=this.array[t*this.itemSize+e];return this.normalized&&(i=Ht(i,this.array)),i}setComponent(t,e,i){return this.normalized&&(i=G(i,this.array)),this.array[t*this.itemSize+e]=i,this}getX(t){let e=this.array[t*this.itemSize];return this.normalized&&(e=Ht(e,this.array)),e}setX(t,e){return this.normalized&&(e=G(e,this.array)),this.array[t*this.itemSize]=e,this}getY(t){let e=this.array[t*this.itemSize+1];return this.normalized&&(e=Ht(e,this.array)),e}setY(t,e){return this.normalized&&(e=G(e,this.array)),this.array[t*this.itemSize+1]=e,this}getZ(t){let e=this.array[t*this.itemSize+2];return this.normalized&&(e=Ht(e,this.array)),e}setZ(t,e){return this.normalized&&(e=G(e,this.array)),this.array[t*this.itemSize+2]=e,this}getW(t){let e=this.array[t*this.itemSize+3];return this.normalized&&(e=Ht(e,this.array)),e}setW(t,e){return this.normalized&&(e=G(e,this.array)),this.array[t*this.itemSize+3]=e,this}setXY(t,e,i){return t*=this.itemSize,this.normalized&&(e=G(e,this.array),i=G(i,this.array)),this.array[t+0]=e,this.array[t+1]=i,this}setXYZ(t,e,i,s){return t*=this.itemSize,this.normalized&&(e=G(e,this.array),i=G(i,this.array),s=G(s,this.array)),this.array[t+0]=e,this.array[t+1]=i,this.array[t+2]=s,this}setXYZW(t,e,i,s,n){return t*=this.itemSize,this.normalized&&(e=G(e,this.array),i=G(i,this.array),s=G(s,this.array),n=G(n,this.array)),this.array[t+0]=e,this.array[t+1]=i,this.array[t+2]=s,this.array[t+3]=n,this}onUpload(t){return this.onUploadCallback=t,this}clone(){return new this.constructor(this.array,this.itemSize).copy(this)}toJSON(){const t={itemSize:this.itemSize,type:this.array.constructor.name,array:Array.from(this.array),normalized:this.normalized};return this.name!==""&&(t.name=this.name),this.usage!==Ii&&(t.usage=this.usage),t}}class nn extends pt{constructor(t,e,i){super(new Uint16Array(t),e,i)}}class rn extends pt{constructor(t,e,i){super(new Uint32Array(t),e,i)}}class Be extends pt{constructor(t,e,i){super(new Float32Array(t),e,i)}}let an=0;const J=new X,ei=new rt,Pt=new x,$=new ie,Yt=new ie,O=new x;class ne extends Kt{constructor(){super(),this.isBufferGeometry=!0,Object.defineProperty(this,"id",{value:an++}),this.uuid=te(),this.name="",this.type="BufferGeometry",this.index=null,this.attributes={},this.morphAttributes={},this.morphTargetsRelative=!1,this.groups=[],this.boundingBox=null,this.boundingSphere=null,this.drawRange={start:0,count:1/0},this.userData={}}getIndex(){return this.index}setIndex(t){return Array.isArray(t)?this.index=new(Ls(t)?rn:nn)(t,1):this.index=t,this}getAttribute(t){return this.attributes[t]}setAttribute(t,e){return this.attributes[t]=e,this}deleteAttribute(t){return delete this.attributes[t],this}hasAttribute(t){return this.attributes[t]!==void 0}addGroup(t,e,i=0){this.groups.push({start:t,count:e,materialIndex:i})}clearGroups(){this.groups=[]}setDrawRange(t,e){this.drawRange.start=t,this.drawRange.count=e}applyMatrix4(t){const e=this.attributes.position;e!==void 0&&(e.applyMatrix4(t),e.needsUpdate=!0);const i=this.attributes.normal;if(i!==void 0){const n=new wt().getNormalMatrix(t);i.applyNormalMatrix(n),i.needsUpdate=!0}const s=this.attributes.tangent;return s!==void 0&&(s.transformDirection(t),s.needsUpdate=!0),this.boundingBox!==null&&this.computeBoundingBox(),this.boundingSphere!==null&&this.computeBoundingSphere(),this}applyQuaternion(t){return J.makeRotationFromQuaternion(t),this.applyMatrix4(J),this}rotateX(t){return J.makeRotationX(t),this.applyMatrix4(J),this}rotateY(t){return J.makeRotationY(t),this.applyMatrix4(J),this}rotateZ(t){return J.makeRotationZ(t),this.applyMatrix4(J),this}translate(t,e,i){return J.makeTranslation(t,e,i),this.applyMatrix4(J),this}scale(t,e,i){return J.makeScale(t,e,i),this.applyMatrix4(J),this}lookAt(t){return ei.lookAt(t),ei.updateMatrix(),this.applyMatrix4(ei.matrix),this}center(){return this.computeBoundingBox(),this.boundingBox.getCenter(Pt).negate(),this.translate(Pt.x,Pt.y,Pt.z),this}setFromPoints(t){const e=[];for(let i=0,s=t.length;i<s;i++){const n=t[i];e.push(n.x,n.y,n.z||0)}return this.setAttribute("position",new Be(e,3)),this}computeBoundingBox(){this.boundingBox===null&&(this.boundingBox=new ie);const t=this.attributes.position,e=this.morphAttributes.position;if(t&&t.isGLBufferAttribute){console.error('THREE.BufferGeometry.computeBoundingBox(): GLBufferAttribute requires a manual bounding box. Alternatively set "mesh.frustumCulled" to "false".',this),this.boundingBox.set(new x(-1/0,-1/0,-1/0),new x(1/0,1/0,1/0));return}if(t!==void 0){if(this.boundingBox.setFromBufferAttribute(t),e)for(let i=0,s=e.length;i<s;i++){const n=e[i];$.setFromBufferAttribute(n),this.morphTargetsRelative?(O.addVectors(this.boundingBox.min,$.min),this.boundingBox.expandByPoint(O),O.addVectors(this.boundingBox.max,$.max),this.boundingBox.expandByPoint(O)):(this.boundingBox.expandByPoint($.min),this.boundingBox.expandByPoint($.max))}}else this.boundingBox.makeEmpty();(isNaN(this.boundingBox.min.x)||isNaN(this.boundingBox.min.y)||isNaN(this.boundingBox.min.z))&&console.error('THREE.BufferGeometry.computeBoundingBox(): Computed min/max have NaN values. The "position" attribute is likely to have NaN values.',this)}computeBoundingSphere(){this.boundingSphere===null&&(this.boundingSphere=new xs);const t=this.attributes.position,e=this.morphAttributes.position;if(t&&t.isGLBufferAttribute){console.error('THREE.BufferGeometry.computeBoundingSphere(): GLBufferAttribute requires a manual bounding sphere. Alternatively set "mesh.frustumCulled" to "false".',this),this.boundingSphere.set(new x,1/0);return}if(t){const i=this.boundingSphere.center;if($.setFromBufferAttribute(t),e)for(let n=0,r=e.length;n<r;n++){const h=e[n];Yt.setFromBufferAttribute(h),this.morphTargetsRelative?(O.addVectors($.min,Yt.min),$.expandByPoint(O),O.addVectors($.max,Yt.max),$.expandByPoint(O)):($.expandByPoint(Yt.min),$.expandByPoint(Yt.max))}$.getCenter(i);let s=0;for(let n=0,r=t.count;n<r;n++)O.fromBufferAttribute(t,n),s=Math.max(s,i.distanceToSquared(O));if(e)for(let n=0,r=e.length;n<r;n++){const h=e[n],a=this.morphTargetsRelative;for(let o=0,l=h.count;o<l;o++)O.fromBufferAttribute(h,o),a&&(Pt.fromBufferAttribute(t,o),O.add(Pt)),s=Math.max(s,i.distanceToSquared(O))}this.boundingSphere.radius=Math.sqrt(s),isNaN(this.boundingSphere.radius)&&console.error('THREE.BufferGeometry.computeBoundingSphere(): Computed radius is NaN. The "position" attribute is likely to have NaN values.',this)}}computeTangents(){const t=this.index,e=this.attributes;if(t===null||e.position===void 0||e.normal===void 0||e.uv===void 0){console.error("THREE.BufferGeometry: .computeTangents() failed. Missing required attributes (index, position, normal or uv)");return}const i=t.array,s=e.position.array,n=e.normal.array,r=e.uv.array,h=s.length/3;this.hasAttribute("tangent")===!1&&this.setAttribute("tangent",new pt(new Float32Array(4*h),4));const a=this.getAttribute("tangent").array,o=[],l=[];for(let _=0;_<h;_++)o[_]=new x,l[_]=new x;const c=new x,u=new x,f=new x,m=new W,p=new W,y=new W,g=new x,z=new x;function F(_,v,B){c.fromArray(s,_*3),u.fromArray(s,v*3),f.fromArray(s,B*3),m.fromArray(r,_*2),p.fromArray(r,v*2),y.fromArray(r,B*2),u.sub(c),f.sub(c),p.sub(m),y.sub(m);const R=1/(p.x*y.y-y.x*p.y);isFinite(R)&&(g.copy(u).multiplyScalar(y.y).addScaledVector(f,-p.y).multiplyScalar(R),z.copy(f).multiplyScalar(p.x).addScaledVector(u,-y.x).multiplyScalar(R),o[_].add(g),o[v].add(g),o[B].add(g),l[_].add(z),l[v].add(z),l[B].add(z))}let w=this.groups;w.length===0&&(w=[{start:0,count:i.length}]);for(let _=0,v=w.length;_<v;++_){const B=w[_],R=B.start,T=B.count;for(let C=R,k=R+T;C<k;C+=3)F(i[C+0],i[C+1],i[C+2])}const S=new x,A=new x,b=new x,M=new x;function E(_){b.fromArray(n,_*3),M.copy(b);const v=o[_];S.copy(v),S.sub(b.multiplyScalar(b.dot(v))).normalize(),A.crossVectors(M,v);const R=A.dot(l[_])<0?-1:1;a[_*4]=S.x,a[_*4+1]=S.y,a[_*4+2]=S.z,a[_*4+3]=R}for(let _=0,v=w.length;_<v;++_){const B=w[_],R=B.start,T=B.count;for(let C=R,k=R+T;C<k;C+=3)E(i[C+0]),E(i[C+1]),E(i[C+2])}}computeVertexNormals(){const t=this.index,e=this.getAttribute("position");if(e!==void 0){let i=this.getAttribute("normal");if(i===void 0)i=new pt(new Float32Array(e.count*3),3),this.setAttribute("normal",i);else for(let u=0,f=i.count;u<f;u++)i.setXYZ(u,0,0,0);const s=new x,n=new x,r=new x,h=new x,a=new x,o=new x,l=new x,c=new x;if(t)for(let u=0,f=t.count;u<f;u+=3){const m=t.getX(u+0),p=t.getX(u+1),y=t.getX(u+2);s.fromBufferAttribute(e,m),n.fromBufferAttribute(e,p),r.fromBufferAttribute(e,y),l.subVectors(r,n),c.subVectors(s,n),l.cross(c),h.fromBufferAttribute(i,m),a.fromBufferAttribute(i,p),o.fromBufferAttribute(i,y),h.add(l),a.add(l),o.add(l),i.setXYZ(m,h.x,h.y,h.z),i.setXYZ(p,a.x,a.y,a.z),i.setXYZ(y,o.x,o.y,o.z)}else for(let u=0,f=e.count;u<f;u+=3)s.fromBufferAttribute(e,u+0),n.fromBufferAttribute(e,u+1),r.fromBufferAttribute(e,u+2),l.subVectors(r,n),c.subVectors(s,n),l.cross(c),i.setXYZ(u+0,l.x,l.y,l.z),i.setXYZ(u+1,l.x,l.y,l.z),i.setXYZ(u+2,l.x,l.y,l.z);this.normalizeNormals(),i.needsUpdate=!0}}normalizeNormals(){const t=this.attributes.normal;for(let e=0,i=t.count;e<i;e++)O.fromBufferAttribute(t,e),O.normalize(),t.setXYZ(e,O.x,O.y,O.z)}toNonIndexed(){function t(h,a){const o=h.array,l=h.itemSize,c=h.normalized,u=new o.constructor(a.length*l);let f=0,m=0;for(let p=0,y=a.length;p<y;p++){h.isInterleavedBufferAttribute?f=a[p]*h.data.stride+h.offset:f=a[p]*l;for(let g=0;g<l;g++)u[m++]=o[f++]}return new pt(u,l,c)}if(this.index===null)return console.warn("THREE.BufferGeometry.toNonIndexed(): BufferGeometry is already non-indexed."),this;const e=new ne,i=this.index.array,s=this.attributes;for(const h in s){const a=s[h],o=t(a,i);e.setAttribute(h,o)}const n=this.morphAttributes;for(const h in n){const a=[],o=n[h];for(let l=0,c=o.length;l<c;l++){const u=o[l],f=t(u,i);a.push(f)}e.morphAttributes[h]=a}e.morphTargetsRelative=this.morphTargetsRelative;const r=this.groups;for(let h=0,a=r.length;h<a;h++){const o=r[h];e.addGroup(o.start,o.count,o.materialIndex)}return e}toJSON(){const t={metadata:{version:4.6,type:"BufferGeometry",generator:"BufferGeometry.toJSON"}};if(t.uuid=this.uuid,t.type=this.type,this.name!==""&&(t.name=this.name),Object.keys(this.userData).length>0&&(t.userData=this.userData),this.parameters!==void 0){const a=this.parameters;for(const o in a)a[o]!==void 0&&(t[o]=a[o]);return t}t.data={attributes:{}};const e=this.index;e!==null&&(t.data.index={type:e.array.constructor.name,array:Array.prototype.slice.call(e.array)});const i=this.attributes;for(const a in i){const o=i[a];t.data.attributes[a]=o.toJSON(t.data)}const s={};let n=!1;for(const a in this.morphAttributes){const o=this.morphAttributes[a],l=[];for(let c=0,u=o.length;c<u;c++){const f=o[c];l.push(f.toJSON(t.data))}l.length>0&&(s[a]=l,n=!0)}n&&(t.data.morphAttributes=s,t.data.morphTargetsRelative=this.morphTargetsRelative);const r=this.groups;r.length>0&&(t.data.groups=JSON.parse(JSON.stringify(r)));const h=this.boundingSphere;return h!==null&&(t.data.boundingSphere={center:h.center.toArray(),radius:h.radius}),t}clone(){return new this.constructor().copy(this)}copy(t){this.index=null,this.attributes={},this.morphAttributes={},this.groups=[],this.boundingBox=null,this.boundingSphere=null;const e={};this.name=t.name;const i=t.index;i!==null&&this.setIndex(i.clone(e));const s=t.attributes;for(const o in s){const l=s[o];this.setAttribute(o,l.clone(e))}const n=t.morphAttributes;for(const o in n){const l=[],c=n[o];for(let u=0,f=c.length;u<f;u++)l.push(c[u].clone(e));this.morphAttributes[o]=l}this.morphTargetsRelative=t.morphTargetsRelative;const r=t.groups;for(let o=0,l=r.length;o<l;o++){const c=r[o];this.addGroup(c.start,c.count,c.materialIndex)}const h=t.boundingBox;h!==null&&(this.boundingBox=h.clone());const a=t.boundingSphere;return a!==null&&(this.boundingSphere=a.clone()),this.drawRange.start=t.drawRange.start,this.drawRange.count=t.drawRange.count,this.userData=t.userData,this}dispose(){this.dispatchEvent({type:"dispose"})}}const $i=new X,St=new gs,ge=new xs,Ji=new x,Ot=new x,Lt=new x,qt=new x,ii=new x,Me=new x,be=new W,we=new W,_e=new W,Zi=new x,Qi=new x,Ki=new x,ze=new x,Se=new x;class Ae extends rt{constructor(t=new ne,e=new _s){super(),this.isMesh=!0,this.type="Mesh",this.geometry=t,this.material=e,this.updateMorphTargets()}copy(t,e){return super.copy(t,e),t.morphTargetInfluences!==void 0&&(this.morphTargetInfluences=t.morphTargetInfluences.slice()),t.morphTargetDictionary!==void 0&&(this.morphTargetDictionary=Object.assign({},t.morphTargetDictionary)),this.material=Array.isArray(t.material)?t.material.slice():t.material,this.geometry=t.geometry,this}updateMorphTargets(){const e=this.geometry.morphAttributes,i=Object.keys(e);if(i.length>0){const s=e[i[0]];if(s!==void 0){this.morphTargetInfluences=[],this.morphTargetDictionary={};for(let n=0,r=s.length;n<r;n++){const h=s[n].name||String(n);this.morphTargetInfluences.push(0),this.morphTargetDictionary[h]=n}}}}getVertexPosition(t,e){const i=this.geometry,s=i.attributes.position,n=i.morphAttributes.position,r=i.morphTargetsRelative;e.fromBufferAttribute(s,t);const h=this.morphTargetInfluences;if(n&&h){Me.set(0,0,0);for(let a=0,o=n.length;a<o;a++){const l=h[a],c=n[a];l!==0&&(ii.fromBufferAttribute(c,t),r?Me.addScaledVector(ii,l):Me.addScaledVector(ii.sub(e),l))}e.add(Me)}return e}raycast(t,e){const i=this.geometry,s=this.material,n=this.matrixWorld;s!==void 0&&(i.boundingSphere===null&&i.computeBoundingSphere(),ge.copy(i.boundingSphere),ge.applyMatrix4(n),St.copy(t.ray).recast(t.near),!(ge.containsPoint(St.origin)===!1&&(St.intersectSphere(ge,Ji)===null||St.origin.distanceToSquared(Ji)>(t.far-t.near)**2))&&($i.copy(n).invert(),St.copy(t.ray).applyMatrix4($i),!(i.boundingBox!==null&&St.intersectsBox(i.boundingBox)===!1)&&this._computeIntersections(t,e,St)))}_computeIntersections(t,e,i){let s;const n=this.geometry,r=this.material,h=n.index,a=n.attributes.position,o=n.attributes.uv,l=n.attributes.uv1,c=n.attributes.normal,u=n.groups,f=n.drawRange;if(h!==null)if(Array.isArray(r))for(let m=0,p=u.length;m<p;m++){const y=u[m],g=r[y.materialIndex],z=Math.max(y.start,f.start),F=Math.min(h.count,Math.min(y.start+y.count,f.start+f.count));for(let w=z,S=F;w<S;w+=3){const A=h.getX(w),b=h.getX(w+1),M=h.getX(w+2);s=Fe(this,g,t,i,o,l,c,A,b,M),s&&(s.faceIndex=Math.floor(w/3),s.face.materialIndex=y.materialIndex,e.push(s))}}else{const m=Math.max(0,f.start),p=Math.min(h.count,f.start+f.count);for(let y=m,g=p;y<g;y+=3){const z=h.getX(y),F=h.getX(y+1),w=h.getX(y+2);s=Fe(this,r,t,i,o,l,c,z,F,w),s&&(s.faceIndex=Math.floor(y/3),e.push(s))}}else if(a!==void 0)if(Array.isArray(r))for(let m=0,p=u.length;m<p;m++){const y=u[m],g=r[y.materialIndex],z=Math.max(y.start,f.start),F=Math.min(a.count,Math.min(y.start+y.count,f.start+f.count));for(let w=z,S=F;w<S;w+=3){const A=w,b=w+1,M=w+2;s=Fe(this,g,t,i,o,l,c,A,b,M),s&&(s.faceIndex=Math.floor(w/3),s.face.materialIndex=y.materialIndex,e.push(s))}}else{const m=Math.max(0,f.start),p=Math.min(a.count,f.start+f.count);for(let y=m,g=p;y<g;y+=3){const z=y,F=y+1,w=y+2;s=Fe(this,r,t,i,o,l,c,z,F,w),s&&(s.faceIndex=Math.floor(y/3),e.push(s))}}}}function on(d,t,e,i,s,n,r,h){let a;if(t.side===us?a=i.intersectTriangle(r,n,s,!0,h):a=i.intersectTriangle(s,n,r,t.side===li,h),a===null)return null;Se.copy(h),Se.applyMatrix4(d.matrixWorld);const o=e.ray.origin.distanceTo(Se);return o<e.near||o>e.far?null:{distance:o,point:Se.clone(),object:d}}function Fe(d,t,e,i,s,n,r,h,a,o){d.getVertexPosition(h,Ot),d.getVertexPosition(a,Lt),d.getVertexPosition(o,qt);const l=on(d,t,e,i,Ot,Lt,qt,ze);if(l){s&&(be.fromBufferAttribute(s,h),we.fromBufferAttribute(s,a),_e.fromBufferAttribute(s,o),l.uv=st.getInterpolation(ze,Ot,Lt,qt,be,we,_e,new W)),n&&(be.fromBufferAttribute(n,h),we.fromBufferAttribute(n,a),_e.fromBufferAttribute(n,o),l.uv1=st.getInterpolation(ze,Ot,Lt,qt,be,we,_e,new W),l.uv2=l.uv1),r&&(Zi.fromBufferAttribute(r,h),Qi.fromBufferAttribute(r,a),Ki.fromBufferAttribute(r,o),l.normal=st.getInterpolation(ze,Ot,Lt,qt,Zi,Qi,Ki,new x),l.normal.dot(i.direction)>0&&l.normal.multiplyScalar(-1));const c={a:h,b:a,c:o,normal:new x,materialIndex:0};st.getNormal(Ot,Lt,qt,c.normal),l.face=c}return l}class mi extends ne{constructor(t=1,e=1,i=1,s=1,n=1,r=1){super(),this.type="BoxGeometry",this.parameters={width:t,height:e,depth:i,widthSegments:s,heightSegments:n,depthSegments:r};const h=this;s=Math.floor(s),n=Math.floor(n),r=Math.floor(r);const a=[],o=[],l=[],c=[];let u=0,f=0;m("z","y","x",-1,-1,i,e,t,r,n,0),m("z","y","x",1,-1,i,e,-t,r,n,1),m("x","z","y",1,1,t,i,e,s,r,2),m("x","z","y",1,-1,t,i,-e,s,r,3),m("x","y","z",1,-1,t,e,i,s,n,4),m("x","y","z",-1,-1,t,e,-i,s,n,5),this.setIndex(a),this.setAttribute("position",new Be(o,3)),this.setAttribute("normal",new Be(l,3)),this.setAttribute("uv",new Be(c,2));function m(p,y,g,z,F,w,S,A,b,M,E){const _=w/b,v=S/M,B=w/2,R=S/2,T=A/2,C=b+1,k=M+1;let H=0,Q=0;const D=new x;for(let I=0;I<k;I++){const U=I*v-R;for(let L=0;L<C;L++){const j=L*_-B;D[p]=j*z,D[y]=U*F,D[g]=T,o.push(D.x,D.y,D.z),D[p]=0,D[y]=0,D[g]=A>0?1:-1,l.push(D.x,D.y,D.z),c.push(L/b),c.push(1-I/M),H+=1}}for(let I=0;I<M;I++)for(let U=0;U<b;U++){const L=u+U+C*I,j=u+U+C*(I+1),re=u+(U+1)+C*(I+1),gi=u+(U+1)+C*I;a.push(L,j,gi),a.push(j,re,gi),Q+=6}h.addGroup(f,Q,E),f+=Q,u+=H}}copy(t){return super.copy(t),this.parameters=Object.assign({},t.parameters),this}static fromJSON(t){return new mi(t.width,t.height,t.depth,t.widthSegments,t.heightSegments,t.depthSegments)}}function hn(d){const t={};for(const e in d){t[e]={};for(const i in d[e]){const s=d[e][i];s&&(s.isColor||s.isMatrix3||s.isMatrix4||s.isVector2||s.isVector3||s.isVector4||s.isTexture||s.isQuaternion)?s.isRenderTargetTexture?(console.warn("UniformsUtils: Textures of render targets cannot be cloned via cloneUniforms() or mergeUniforms()."),t[e][i]=null):t[e][i]=s.clone():Array.isArray(s)?t[e][i]=s.slice():t[e][i]=s}}return t}function ln(d){const t=[];for(let e=0;e<d.length;e++)t.push(d[e].clone());return t}var cn=`void main() {
	gl_Position = projectionMatrix * modelViewMatrix * vec4( position, 1.0 );
}`,un=`void main() {
	gl_FragColor = vec4( 1.0, 0.0, 0.0, 1.0 );
}`;class pi extends ws{constructor(t){super(),this.isShaderMaterial=!0,this.type="ShaderMaterial",this.defines={},this.uniforms={},this.uniformsGroups=[],this.vertexShader=cn,this.fragmentShader=un,this.linewidth=1,this.wireframe=!1,this.wireframeLinewidth=1,this.fog=!1,this.lights=!1,this.clipping=!1,this.forceSinglePass=!0,this.extensions={derivatives:!1,fragDepth:!1,drawBuffers:!1,shaderTextureLOD:!1,clipCullDistance:!1},this.defaultAttributeValues={color:[1,1,1],uv:[0,0],uv1:[0,0]},this.index0AttributeName=void 0,this.uniformsNeedUpdate=!1,this.glslVersion=null,t!==void 0&&this.setValues(t)}copy(t){return super.copy(t),this.fragmentShader=t.fragmentShader,this.vertexShader=t.vertexShader,this.uniforms=hn(t.uniforms),this.uniformsGroups=ln(t.uniformsGroups),this.defines=Object.assign({},t.defines),this.wireframe=t.wireframe,this.wireframeLinewidth=t.wireframeLinewidth,this.fog=t.fog,this.lights=t.lights,this.clipping=t.clipping,this.extensions=Object.assign({},t.extensions),this.glslVersion=t.glslVersion,this}toJSON(t){const e=super.toJSON(t);e.glslVersion=this.glslVersion,e.uniforms={};for(const s in this.uniforms){const r=this.uniforms[s].value;r&&r.isTexture?e.uniforms[s]={type:"t",value:r.toJSON(t).uuid}:r&&r.isColor?e.uniforms[s]={type:"c",value:r.getHex()}:r&&r.isVector2?e.uniforms[s]={type:"v2",value:r.toArray()}:r&&r.isVector3?e.uniforms[s]={type:"v3",value:r.toArray()}:r&&r.isVector4?e.uniforms[s]={type:"v4",value:r.toArray()}:r&&r.isMatrix3?e.uniforms[s]={type:"m3",value:r.toArray()}:r&&r.isMatrix4?e.uniforms[s]={type:"m4",value:r.toArray()}:e.uniforms[s]={value:r}}Object.keys(this.defines).length>0&&(e.defines=this.defines),e.vertexShader=this.vertexShader,e.fragmentShader=this.fragmentShader,e.lights=this.lights,e.clipping=this.clipping;const i={};for(const s in this.extensions)this.extensions[s]===!0&&(i[s]=!0);return Object.keys(i).length>0&&(e.extensions=i),e}}class zs extends rt{constructor(){super(),this.isCamera=!0,this.type="Camera",this.matrixWorldInverse=new X,this.projectionMatrix=new X,this.projectionMatrixInverse=new X,this.coordinateSystem=Jt}copy(t,e){return super.copy(t,e),this.matrixWorldInverse.copy(t.matrixWorldInverse),this.projectionMatrix.copy(t.projectionMatrix),this.projectionMatrixInverse.copy(t.projectionMatrixInverse),this.coordinateSystem=t.coordinateSystem,this}getWorldDirection(t){return super.getWorldDirection(t).negate()}updateMatrixWorld(t){super.updateMatrixWorld(t),this.matrixWorldInverse.copy(this.matrixWorld).invert()}updateWorldMatrix(t,e){super.updateWorldMatrix(t,e),this.matrixWorldInverse.copy(this.matrixWorld).invert()}clone(){return new this.constructor().copy(this)}}class dn extends zs{constructor(t=50,e=1,i=.1,s=2e3){super(),this.isPerspectiveCamera=!0,this.type="PerspectiveCamera",this.fov=t,this.zoom=1,this.near=i,this.far=s,this.focus=10,this.aspect=e,this.view=null,this.filmGauge=35,this.filmOffset=0,this.updateProjectionMatrix()}copy(t,e){return super.copy(t,e),this.fov=t.fov,this.zoom=t.zoom,this.near=t.near,this.far=t.far,this.focus=t.focus,this.aspect=t.aspect,this.view=t.view===null?null:Object.assign({},t.view),this.filmGauge=t.filmGauge,this.filmOffset=t.filmOffset,this}setFocalLength(t){const e=.5*this.getFilmHeight()/t;this.fov=Pi*2*Math.atan(e),this.updateProjectionMatrix()}getFocalLength(){const t=Math.tan(qe*.5*this.fov);return .5*this.getFilmHeight()/t}getEffectiveFOV(){return Pi*2*Math.atan(Math.tan(qe*.5*this.fov)/this.zoom)}getFilmWidth(){return this.filmGauge*Math.min(this.aspect,1)}getFilmHeight(){return this.filmGauge/Math.max(this.aspect,1)}setViewOffset(t,e,i,s,n,r){this.aspect=t/e,this.view===null&&(this.view={enabled:!0,fullWidth:1,fullHeight:1,offsetX:0,offsetY:0,width:1,height:1}),this.view.enabled=!0,this.view.fullWidth=t,this.view.fullHeight=e,this.view.offsetX=i,this.view.offsetY=s,this.view.width=n,this.view.height=r,this.updateProjectionMatrix()}clearViewOffset(){this.view!==null&&(this.view.enabled=!1),this.updateProjectionMatrix()}updateProjectionMatrix(){const t=this.near;let e=t*Math.tan(qe*.5*this.fov)/this.zoom,i=2*e,s=this.aspect*i,n=-.5*s;const r=this.view;if(this.view!==null&&this.view.enabled){const a=r.fullWidth,o=r.fullHeight;n+=r.offsetX*s/a,e-=r.offsetY*i/o,s*=r.width/a,i*=r.height/o}const h=this.filmOffset;h!==0&&(n+=t*h/this.getFilmWidth()),this.projectionMatrix.makePerspective(n,n+s,e,e-i,t,this.far,this.coordinateSystem),this.projectionMatrixInverse.copy(this.projectionMatrix).invert()}toJSON(t){const e=super.toJSON(t);return e.object.fov=this.fov,e.object.zoom=this.zoom,e.object.near=this.near,e.object.far=this.far,e.object.focus=this.focus,e.object.aspect=this.aspect,this.view!==null&&(e.object.view=Object.assign({},this.view)),e.object.filmGauge=this.filmGauge,e.object.filmOffset=this.filmOffset,e}}class fn extends zs{constructor(t=-1,e=1,i=1,s=-1,n=.1,r=2e3){super(),this.isOrthographicCamera=!0,this.type="OrthographicCamera",this.zoom=1,this.view=null,this.left=t,this.right=e,this.top=i,this.bottom=s,this.near=n,this.far=r,this.updateProjectionMatrix()}copy(t,e){return super.copy(t,e),this.left=t.left,this.right=t.right,this.top=t.top,this.bottom=t.bottom,this.near=t.near,this.far=t.far,this.zoom=t.zoom,this.view=t.view===null?null:Object.assign({},t.view),this}setViewOffset(t,e,i,s,n,r){this.view===null&&(this.view={enabled:!0,fullWidth:1,fullHeight:1,offsetX:0,offsetY:0,width:1,height:1}),this.view.enabled=!0,this.view.fullWidth=t,this.view.fullHeight=e,this.view.offsetX=i,this.view.offsetY=s,this.view.width=n,this.view.height=r,this.updateProjectionMatrix()}clearViewOffset(){this.view!==null&&(this.view.enabled=!1),this.updateProjectionMatrix()}updateProjectionMatrix(){const t=(this.right-this.left)/(2*this.zoom),e=(this.top-this.bottom)/(2*this.zoom),i=(this.right+this.left)/2,s=(this.top+this.bottom)/2;let n=i-t,r=i+t,h=s+e,a=s-e;if(this.view!==null&&this.view.enabled){const o=(this.right-this.left)/this.view.fullWidth/this.zoom,l=(this.top-this.bottom)/this.view.fullHeight/this.zoom;n+=o*this.view.offsetX,r=n+o*this.view.width,h-=l*this.view.offsetY,a=h-l*this.view.height}this.projectionMatrix.makeOrthographic(n,r,h,a,this.near,this.far,this.coordinateSystem),this.projectionMatrixInverse.copy(this.projectionMatrix).invert()}toJSON(t){const e=super.toJSON(t);return e.object.zoom=this.zoom,e.object.left=this.left,e.object.right=this.right,e.object.top=this.top,e.object.bottom=this.bottom,e.object.near=this.near,e.object.far=this.far,this.view!==null&&(e.object.view=Object.assign({},this.view)),e}}const Nt=4,ts=[.125,.215,.35,.446,.526,.582],Ft=20,si=new fn,es=new se;let ni=null,ri=0,ai=0;const At=(1+Math.sqrt(5))/2,Vt=1/At,is=[new x(1,1,1),new x(-1,1,1),new x(1,1,-1),new x(-1,1,-1),new x(0,At,Vt),new x(0,At,-Vt),new x(Vt,0,At),new x(-Vt,0,At),new x(At,Vt,0),new x(-At,Vt,0)];class mn{constructor(t){this._renderer=t,this._pingPongRenderTarget=null,this._lodMax=0,this._cubeSize=0,this._lodPlanes=[],this._sizeLods=[],this._sigmas=[],this._blurMaterial=null,this._cubemapMaterial=null,this._equirectMaterial=null,this._compileMaterial(this._blurMaterial)}fromScene(t,e=0,i=.1,s=100){ni=this._renderer.getRenderTarget(),ri=this._renderer.getActiveCubeFace(),ai=this._renderer.getActiveMipmapLevel(),this._setSize(256);const n=this._allocateTargets();return n.depthBuffer=!0,this._sceneToCubeUV(t,i,s,n),e>0&&this._blur(n,0,0,e),this._applyPMREM(n),this._cleanup(n),n}fromEquirectangular(t,e=null){return this._fromTexture(t,e)}fromCubemap(t,e=null){return this._fromTexture(t,e)}compileCubemapShader(){this._cubemapMaterial===null&&(this._cubemapMaterial=rs(),this._compileMaterial(this._cubemapMaterial))}compileEquirectangularShader(){this._equirectMaterial===null&&(this._equirectMaterial=ns(),this._compileMaterial(this._equirectMaterial))}dispose(){this._dispose(),this._cubemapMaterial!==null&&this._cubemapMaterial.dispose(),this._equirectMaterial!==null&&this._equirectMaterial.dispose()}_setSize(t){this._lodMax=Math.floor(Math.log2(t)),this._cubeSize=Math.pow(2,this._lodMax)}_dispose(){this._blurMaterial!==null&&this._blurMaterial.dispose(),this._pingPongRenderTarget!==null&&this._pingPongRenderTarget.dispose();for(let t=0;t<this._lodPlanes.length;t++)this._lodPlanes[t].dispose()}_cleanup(t){this._renderer.setRenderTarget(ni,ri,ai),t.scissorTest=!1,Te(t,0,0,t.width,t.height)}_fromTexture(t,e){t.mapping===Ai||t.mapping===Fi?this._setSize(t.image.length===0?16:t.image[0].width||t.image[0].image.width):this._setSize(t.image.width/4),ni=this._renderer.getRenderTarget(),ri=this._renderer.getActiveCubeFace(),ai=this._renderer.getActiveMipmapLevel();const i=e||this._allocateTargets();return this._textureToCubeUV(t,i),this._applyPMREM(i),this._cleanup(i),i}_allocateTargets(){const t=3*Math.max(this._cubeSize,112),e=4*this._cubeSize,i={magFilter:mt,minFilter:mt,generateMipmaps:!1,type:$t,format:ms,colorSpace:Qt,depthBuffer:!1},s=ss(t,e,i);if(this._pingPongRenderTarget===null||this._pingPongRenderTarget.width!==t||this._pingPongRenderTarget.height!==e){this._pingPongRenderTarget!==null&&this._dispose(),this._pingPongRenderTarget=ss(t,e,i);const{_lodMax:n}=this;({sizeLods:this._sizeLods,lodPlanes:this._lodPlanes,sigmas:this._sigmas}=pn(n)),this._blurMaterial=yn(n,t,e)}return s}_compileMaterial(t){const e=new Ae(this._lodPlanes[0],t);this._renderer.compile(e,si)}_sceneToCubeUV(t,e,i,s){const h=new dn(90,1,e,i),a=[1,-1,1,1,1,1],o=[1,1,1,-1,-1,-1],l=this._renderer,c=l.autoClear,u=l.toneMapping;l.getClearColor(es),l.toneMapping=vs,l.autoClear=!1;const f=new _s({name:"PMREM.Background",side:us,depthWrite:!1,depthTest:!1}),m=new Ae(new mi,f);let p=!1;const y=t.background;y?y.isColor&&(f.color.copy(y),t.background=null,p=!0):(f.color.copy(es),p=!0);for(let g=0;g<6;g++){const z=g%3;z===0?(h.up.set(0,a[g],0),h.lookAt(o[g],0,0)):z===1?(h.up.set(0,0,a[g]),h.lookAt(0,o[g],0)):(h.up.set(0,a[g],0),h.lookAt(0,0,o[g]));const F=this._cubeSize;Te(s,z*F,g>2?F:0,F,F),l.setRenderTarget(s),p&&l.render(m,h),l.render(t,h)}m.geometry.dispose(),m.material.dispose(),l.toneMapping=u,l.autoClear=c,t.background=y}_textureToCubeUV(t,e){const i=this._renderer,s=t.mapping===Ai||t.mapping===Fi;s?(this._cubemapMaterial===null&&(this._cubemapMaterial=rs()),this._cubemapMaterial.uniforms.flipEnvMap.value=t.isRenderTargetTexture===!1?-1:1):this._equirectMaterial===null&&(this._equirectMaterial=ns());const n=s?this._cubemapMaterial:this._equirectMaterial,r=new Ae(this._lodPlanes[0],n),h=n.uniforms;h.envMap.value=t;const a=this._cubeSize;Te(e,0,0,3*a,2*a),i.setRenderTarget(e),i.render(r,si)}_applyPMREM(t){const e=this._renderer,i=e.autoClear;e.autoClear=!1;for(let s=1;s<this._lodPlanes.length;s++){const n=Math.sqrt(this._sigmas[s]*this._sigmas[s]-this._sigmas[s-1]*this._sigmas[s-1]),r=is[(s-1)%is.length];this._blur(t,s-1,s,n,r)}e.autoClear=i}_blur(t,e,i,s,n){const r=this._pingPongRenderTarget;this._halfBlur(t,r,e,i,s,"latitudinal",n),this._halfBlur(r,t,i,i,s,"longitudinal",n)}_halfBlur(t,e,i,s,n,r,h){const a=this._renderer,o=this._blurMaterial;r!=="latitudinal"&&r!=="longitudinal"&&console.error("blur direction must be either latitudinal or longitudinal!");const l=3,c=new Ae(this._lodPlanes[s],o),u=o.uniforms,f=this._sizeLods[i]-1,m=isFinite(n)?Math.PI/(2*f):2*Math.PI/(2*Ft-1),p=n/m,y=isFinite(n)?1+Math.floor(l*p):Ft;y>Ft&&console.warn(`sigmaRadians, ${n}, is too large and will clip, as it requested ${y} samples when the maximum is set to ${Ft}`);const g=[];let z=0;for(let b=0;b<Ft;++b){const M=b/p,E=Math.exp(-M*M/2);g.push(E),b===0?z+=E:b<y&&(z+=2*E)}for(let b=0;b<g.length;b++)g[b]=g[b]/z;u.envMap.value=t.texture,u.samples.value=y,u.weights.value=g,u.latitudinal.value=r==="latitudinal",h&&(u.poleAxis.value=h);const{_lodMax:F}=this;u.dTheta.value=m,u.mipInt.value=F-i;const w=this._sizeLods[s],S=3*w*(s>F-Nt?s-F+Nt:0),A=4*(this._cubeSize-w);Te(e,S,A,3*w,2*w),a.setRenderTarget(e),a.render(c,si)}}function pn(d){const t=[],e=[],i=[];let s=d;const n=d-Nt+1+ts.length;for(let r=0;r<n;r++){const h=Math.pow(2,s);e.push(h);let a=1/h;r>d-Nt?a=ts[r-d+Nt-1]:r===0&&(a=0),i.push(a);const o=1/(h-2),l=-o,c=1+o,u=[l,l,c,l,c,c,l,l,c,c,l,c],f=6,m=6,p=3,y=2,g=1,z=new Float32Array(p*m*f),F=new Float32Array(y*m*f),w=new Float32Array(g*m*f);for(let A=0;A<f;A++){const b=A%3*2/3-1,M=A>2?0:-1,E=[b,M,0,b+2/3,M,0,b+2/3,M+1,0,b,M,0,b+2/3,M+1,0,b,M+1,0];z.set(E,p*m*A),F.set(u,y*m*A);const _=[A,A,A,A,A,A];w.set(_,g*m*A)}const S=new ne;S.setAttribute("position",new pt(z,p)),S.setAttribute("uv",new pt(F,y)),S.setAttribute("faceIndex",new pt(w,g)),t.push(S),s>Nt&&s--}return{lodPlanes:t,sizeLods:e,sigmas:i}}function ss(d,t,e){const i=new Hs(d,t,e);return i.texture.mapping=Cs,i.texture.name="PMREM.cubeUv",i.scissorTest=!0,i}function Te(d,t,e,i,s){d.viewport.set(t,e,i,s),d.scissor.set(t,e,i,s)}function yn(d,t,e){const i=new Float32Array(Ft),s=new x(0,1,0);return new pi({name:"SphericalGaussianBlur",defines:{n:Ft,CUBEUV_TEXEL_WIDTH:1/t,CUBEUV_TEXEL_HEIGHT:1/e,CUBEUV_MAX_MIP:`${d}.0`},uniforms:{envMap:{value:null},samples:{value:1},weights:{value:i},latitudinal:{value:!1},dTheta:{value:0},mipInt:{value:0},poleAxis:{value:s}},vertexShader:yi(),fragmentShader:`

			precision mediump float;
			precision mediump int;

			varying vec3 vOutputDirection;

			uniform sampler2D envMap;
			uniform int samples;
			uniform float weights[ n ];
			uniform bool latitudinal;
			uniform float dTheta;
			uniform float mipInt;
			uniform vec3 poleAxis;

			#define ENVMAP_TYPE_CUBE_UV
			#include <cube_uv_reflection_fragment>

			vec3 getSample( float theta, vec3 axis ) {

				float cosTheta = cos( theta );
				// Rodrigues' axis-angle rotation
				vec3 sampleDirection = vOutputDirection * cosTheta
					+ cross( axis, vOutputDirection ) * sin( theta )
					+ axis * dot( axis, vOutputDirection ) * ( 1.0 - cosTheta );

				return bilinearCubeUV( envMap, sampleDirection, mipInt );

			}

			void main() {

				vec3 axis = latitudinal ? poleAxis : cross( poleAxis, vOutputDirection );

				if ( all( equal( axis, vec3( 0.0 ) ) ) ) {

					axis = vec3( vOutputDirection.z, 0.0, - vOutputDirection.x );

				}

				axis = normalize( axis );

				gl_FragColor = vec4( 0.0, 0.0, 0.0, 1.0 );
				gl_FragColor.rgb += weights[ 0 ] * getSample( 0.0, axis );

				for ( int i = 1; i < n; i++ ) {

					if ( i >= samples ) {

						break;

					}

					float theta = dTheta * float( i );
					gl_FragColor.rgb += weights[ i ] * getSample( -1.0 * theta, axis );
					gl_FragColor.rgb += weights[ i ] * getSample( theta, axis );

				}

			}
		`,blending:fi,depthTest:!1,depthWrite:!1})}function ns(){return new pi({name:"EquirectangularToCubeUV",uniforms:{envMap:{value:null}},vertexShader:yi(),fragmentShader:`

			precision mediump float;
			precision mediump int;

			varying vec3 vOutputDirection;

			uniform sampler2D envMap;

			#include <common>

			void main() {

				vec3 outputDirection = normalize( vOutputDirection );
				vec2 uv = equirectUv( outputDirection );

				gl_FragColor = vec4( texture2D ( envMap, uv ).rgb, 1.0 );

			}
		`,blending:fi,depthTest:!1,depthWrite:!1})}function rs(){return new pi({name:"CubemapToCubeUV",uniforms:{envMap:{value:null},flipEnvMap:{value:-1}},vertexShader:yi(),fragmentShader:`

			precision mediump float;
			precision mediump int;

			uniform float flipEnvMap;

			varying vec3 vOutputDirection;

			uniform samplerCube envMap;

			void main() {

				gl_FragColor = textureCube( envMap, vec3( flipEnvMap * vOutputDirection.x, vOutputDirection.yz ) );

			}
		`,blending:fi,depthTest:!1,depthWrite:!1})}function yi(){return`

		precision mediump float;
		precision mediump int;

		attribute float faceIndex;

		varying vec3 vOutputDirection;

		// RH coordinate system; PMREM face-indexing convention
		vec3 getDirection( vec2 uv, float face ) {

			uv = 2.0 * uv - 1.0;

			vec3 direction = vec3( uv, 1.0 );

			if ( face == 0.0 ) {

				direction = direction.zyx; // ( 1, v, u ) pos x

			} else if ( face == 1.0 ) {

				direction = direction.xzy;
				direction.xz *= -1.0; // ( -u, 1, -v ) pos y

			} else if ( face == 2.0 ) {

				direction.x *= -1.0; // ( -u, v, 1 ) pos z

			} else if ( face == 3.0 ) {

				direction = direction.zyx;
				direction.xz *= -1.0; // ( -1, v, -u ) neg x

			} else if ( face == 4.0 ) {

				direction = direction.xzy;
				direction.xy *= -1.0; // ( -u, -1, v ) neg y

			} else if ( face == 5.0 ) {

				direction.z *= -1.0; // ( u, v, -1 ) neg z

			}

			return direction;

		}

		void main() {

			vOutputDirection = getDirection( uv, faceIndex );
			gl_Position = vec4( position, 1.0 );

		}
	`}class xn extends nt{constructor(t,e,i,s,n,r,h,a,o,l){if(l=l!==void 0?l:Le,l!==Le&&l!==vi)throw new Error("DepthTexture format must be either THREE.DepthFormat or THREE.DepthStencilFormat");i===void 0&&l===Le&&(i=Bs),i===void 0&&l===vi&&(i=ks),super(null,s,n,r,h,a,l,i,o),this.isDepthTexture=!0,this.image={width:t,height:e},this.magFilter=h!==void 0?h:Ie,this.minFilter=a!==void 0?a:Ie,this.flipY=!1,this.generateMipmaps=!1,this.compareFunction=null}copy(t){return super.copy(t),this.compareFunction=t.compareFunction,this}toJSON(t){const e=super.toJSON(t);return this.compareFunction!==null&&(e.compareFunction=this.compareFunction),e}}const gn=new xn(1,1);gn.compareFunction=Ps;class Mn extends nt{constructor(t=null,e=1,i=1,s,n,r,h,a,o=Ie,l=Ie,c,u){super(null,r,h,a,o,l,s,n,c,u),this.isDataTexture=!0,this.image={data:t,width:e,height:i},this.generateMipmaps=!1,this.flipY=!1,this.unpackAlignment=1}}const as={enabled:!1,files:{},add:function(d,t){this.enabled!==!1&&(this.files[d]=t)},get:function(d){if(this.enabled!==!1)return this.files[d]},remove:function(d){delete this.files[d]},clear:function(){this.files={}}};class bn{constructor(t,e,i){const s=this;let n=!1,r=0,h=0,a;const o=[];this.onStart=void 0,this.onLoad=t,this.onProgress=e,this.onError=i,this.itemStart=function(l){h++,n===!1&&s.onStart!==void 0&&s.onStart(l,r,h),n=!0},this.itemEnd=function(l){r++,s.onProgress!==void 0&&s.onProgress(l,r,h),r===h&&(n=!1,s.onLoad!==void 0&&s.onLoad())},this.itemError=function(l){s.onError!==void 0&&s.onError(l)},this.resolveURL=function(l){return a?a(l):l},this.setURLModifier=function(l){return a=l,this},this.addHandler=function(l,c){return o.push(l,c),this},this.removeHandler=function(l){const c=o.indexOf(l);return c!==-1&&o.splice(c,2),this},this.getHandler=function(l){for(let c=0,u=o.length;c<u;c+=2){const f=o[c],m=o[c+1];if(f.global&&(f.lastIndex=0),f.test(l))return m}return null}}}const wn=new bn;class xi{constructor(t){this.manager=t!==void 0?t:wn,this.crossOrigin="anonymous",this.withCredentials=!1,this.path="",this.resourcePath="",this.requestHeader={}}load(){}loadAsync(t,e){const i=this;return new Promise(function(s,n){i.load(t,s,e,n)})}parse(){}setCrossOrigin(t){return this.crossOrigin=t,this}setWithCredentials(t){return this.withCredentials=t,this}setPath(t){return this.path=t,this}setResourcePath(t){return this.resourcePath=t,this}setRequestHeader(t){return this.requestHeader=t,this}}xi.DEFAULT_MATERIAL_NAME="__DEFAULT";const ut={};class _n extends Error{constructor(t,e){super(t),this.response=e}}class zn extends xi{constructor(t){super(t)}load(t,e,i,s){t===void 0&&(t=""),this.path!==void 0&&(t=this.path+t),t=this.manager.resolveURL(t);const n=as.get(t);if(n!==void 0)return this.manager.itemStart(t),setTimeout(()=>{e&&e(n),this.manager.itemEnd(t)},0),n;if(ut[t]!==void 0){ut[t].push({onLoad:e,onProgress:i,onError:s});return}ut[t]=[],ut[t].push({onLoad:e,onProgress:i,onError:s});const r=new Request(t,{headers:new Headers(this.requestHeader),credentials:this.withCredentials?"include":"same-origin"}),h=this.mimeType,a=this.responseType;fetch(r).then(o=>{if(o.status===200||o.status===0){if(o.status===0&&console.warn("THREE.FileLoader: HTTP Status 0 received."),typeof ReadableStream>"u"||o.body===void 0||o.body.getReader===void 0)return o;const l=ut[t],c=o.body.getReader(),u=o.headers.get("Content-Length")||o.headers.get("X-File-Size"),f=u?parseInt(u):0,m=f!==0;let p=0;const y=new ReadableStream({start(g){z();function z(){c.read().then(({done:F,value:w})=>{if(F)g.close();else{p+=w.byteLength;const S=new ProgressEvent("progress",{lengthComputable:m,loaded:p,total:f});for(let A=0,b=l.length;A<b;A++){const M=l[A];M.onProgress&&M.onProgress(S)}g.enqueue(w),z()}})}}});return new Response(y)}else throw new _n(`fetch for "${o.url}" responded with ${o.status}: ${o.statusText}`,o)}).then(o=>{switch(a){case"arraybuffer":return o.arrayBuffer();case"blob":return o.blob();case"document":return o.text().then(l=>new DOMParser().parseFromString(l,h));case"json":return o.json();default:if(h===void 0)return o.text();{const c=/charset="?([^;"\s]*)"?/i.exec(h),u=c&&c[1]?c[1].toLowerCase():void 0,f=new TextDecoder(u);return o.arrayBuffer().then(m=>f.decode(m))}}}).then(o=>{as.add(t,o);const l=ut[t];delete ut[t];for(let c=0,u=l.length;c<u;c++){const f=l[c];f.onLoad&&f.onLoad(o)}}).catch(o=>{const l=ut[t];if(l===void 0)throw this.manager.itemError(t),o;delete ut[t];for(let c=0,u=l.length;c<u;c++){const f=l[c];f.onError&&f.onError(o)}this.manager.itemError(t)}).finally(()=>{this.manager.itemEnd(t)}),this.manager.itemStart(t)}setResponseType(t){return this.responseType=t,this}setMimeType(t){return this.mimeType=t,this}}class Sn extends xi{constructor(t){super(t)}load(t,e,i,s){const n=this,r=new Mn,h=new zn(this.manager);return h.setResponseType("arraybuffer"),h.setRequestHeader(this.requestHeader),h.setPath(this.path),h.setWithCredentials(n.withCredentials),h.load(t,function(a){let o;try{o=n.parse(a)}catch(l){if(s!==void 0)s(l);else{console.error(l);return}}o.image!==void 0?r.image=o.image:o.data!==void 0&&(r.image.width=o.width,r.image.height=o.height,r.image.data=o.data),r.wrapS=o.wrapS!==void 0?o.wrapS:Ut,r.wrapT=o.wrapT!==void 0?o.wrapT:Ut,r.magFilter=o.magFilter!==void 0?o.magFilter:mt,r.minFilter=o.minFilter!==void 0?o.minFilter:mt,r.anisotropy=o.anisotropy!==void 0?o.anisotropy:1,o.colorSpace!==void 0?r.colorSpace=o.colorSpace:o.encoding!==void 0&&(r.encoding=o.encoding),o.flipY!==void 0&&(r.flipY=o.flipY),o.format!==void 0&&(r.format=o.format),o.type!==void 0&&(r.type=o.type),o.mipmaps!==void 0&&(r.mipmaps=o.mipmaps,r.minFilter=fs),o.mipmapCount===1&&(r.minFilter=mt),o.generateMipmaps!==void 0&&(r.generateMipmaps=o.generateMipmaps),r.needsUpdate=!0,e&&e(r,o)},i,s),r}}class An{constructor(t,e,i=0,s=1/0){this.ray=new gs(t,e),this.near=i,this.far=s,this.camera=null,this.layers=new Ms,this.params={Mesh:{},Line:{threshold:1},LOD:{},Points:{threshold:1},Sprite:{}}}set(t,e){this.ray.set(t,e)}setFromCamera(t,e){e.isPerspectiveCamera?(this.ray.origin.setFromMatrixPosition(e.matrixWorld),this.ray.direction.set(t.x,t.y,.5).unproject(e).sub(this.ray.origin).normalize(),this.camera=e):e.isOrthographicCamera?(this.ray.origin.set(t.x,t.y,(e.near+e.far)/(e.near-e.far)).unproject(e),this.ray.direction.set(0,0,-1).transformDirection(e.matrixWorld),this.camera=e):console.error("THREE.Raycaster: Unsupported camera type: "+e.type)}intersectObject(t,e=!0,i=[]){return ui(t,this,i,e),i.sort(os),i}intersectObjects(t,e=!0,i=[]){for(let s=0,n=t.length;s<n;s++)ui(t[s],this,i,e);return i.sort(os),i}}function os(d,t){return d.distance-t.distance}function ui(d,t,e,i){if(d.layers.test(t.layers)&&d.raycast(t,e),i===!0){const s=d.children;for(let n=0,r=s.length;n<r;n++)ui(s[n],t,e,!0)}}typeof __THREE_DEVTOOLS__<"u"&&__THREE_DEVTOOLS__.dispatchEvent(new CustomEvent("register",{detail:{revision:cs}}));typeof window<"u"&&(window.__THREE__?console.warn("WARNING: Multiple instances of Three.js being imported."):window.__THREE__=cs);class Fn extends Sn{constructor(t){super(t),this.type=$t}parse(t){const r=function(M,E){switch(M){case 1:throw new Error("THREE.RGBELoader: Read Error: "+(E||""));case 2:throw new Error("THREE.RGBELoader: Write Error: "+(E||""));case 3:throw new Error("THREE.RGBELoader: Bad File Format: "+(E||""));default:case 4:throw new Error("THREE.RGBELoader: Memory Error: "+(E||""))}},l=`
`,c=function(M,E,_){E=E||1024;let B=M.pos,R=-1,T=0,C="",k=String.fromCharCode.apply(null,new Uint16Array(M.subarray(B,B+128)));for(;0>(R=k.indexOf(l))&&T<E&&B<M.byteLength;)C+=k,T+=k.length,B+=128,k+=String.fromCharCode.apply(null,new Uint16Array(M.subarray(B,B+128)));return-1<R?(_!==!1&&(M.pos+=T+R+1),C+k.slice(0,R)):!1},u=function(M){const E=/^#\?(\S+)/,_=/^\s*GAMMA\s*=\s*(\d+(\.\d+)?)\s*$/,v=/^\s*EXPOSURE\s*=\s*(\d+(\.\d+)?)\s*$/,B=/^\s*FORMAT=(\S+)\s*$/,R=/^\s*\-Y\s+(\d+)\s+\+X\s+(\d+)\s*$/,T={valid:0,string:"",comments:"",programtype:"RGBE",format:"",gamma:1,exposure:1,width:0,height:0};let C,k;for((M.pos>=M.byteLength||!(C=c(M)))&&r(1,"no header found"),(k=C.match(E))||r(3,"bad initial token"),T.valid|=1,T.programtype=k[1],T.string+=C+`
`;C=c(M),C!==!1;){if(T.string+=C+`
`,C.charAt(0)==="#"){T.comments+=C+`
`;continue}if((k=C.match(_))&&(T.gamma=parseFloat(k[1])),(k=C.match(v))&&(T.exposure=parseFloat(k[1])),(k=C.match(B))&&(T.valid|=2,T.format=k[1]),(k=C.match(R))&&(T.valid|=4,T.height=parseInt(k[1],10),T.width=parseInt(k[2],10)),T.valid&2&&T.valid&4)break}return T.valid&2||r(3,"missing format specifier"),T.valid&4||r(3,"missing image size specifier"),T},f=function(M,E,_){const v=E;if(v<8||v>32767||M[0]!==2||M[1]!==2||M[2]&128)return new Uint8Array(M);v!==(M[2]<<8|M[3])&&r(3,"wrong scanline width");const B=new Uint8Array(4*E*_);B.length||r(4,"unable to allocate buffer space");let R=0,T=0;const C=4*v,k=new Uint8Array(4),H=new Uint8Array(C);let Q=_;for(;Q>0&&T<M.byteLength;){T+4>M.byteLength&&r(1),k[0]=M[T++],k[1]=M[T++],k[2]=M[T++],k[3]=M[T++],(k[0]!=2||k[1]!=2||(k[2]<<8|k[3])!=v)&&r(3,"bad rgbe scanline format");let D=0,I;for(;D<C&&T<M.byteLength;){I=M[T++];const L=I>128;if(L&&(I-=128),(I===0||D+I>C)&&r(3,"bad scanline data"),L){const j=M[T++];for(let re=0;re<I;re++)H[D++]=j}else H.set(M.subarray(T,T+I),D),D+=I,T+=I}const U=v;for(let L=0;L<U;L++){let j=0;B[R]=H[L+j],j+=v,B[R+1]=H[L+j],j+=v,B[R+2]=H[L+j],j+=v,B[R+3]=H[L+j],R+=4}Q--}return B},m=function(M,E,_,v){const B=M[E+3],R=Math.pow(2,B-128)/255;_[v+0]=M[E+0]*R,_[v+1]=M[E+1]*R,_[v+2]=M[E+2]*R,_[v+3]=1},p=function(M,E,_,v){const B=M[E+3],R=Math.pow(2,B-128)/255;_[v+0]=ye.toHalfFloat(Math.min(M[E+0]*R,65504)),_[v+1]=ye.toHalfFloat(Math.min(M[E+1]*R,65504)),_[v+2]=ye.toHalfFloat(Math.min(M[E+2]*R,65504)),_[v+3]=ye.toHalfFloat(1)},y=new Uint8Array(t);y.pos=0;const g=u(y),z=g.width,F=g.height,w=f(y.subarray(y.pos),z,F);let S,A,b;switch(this.type){case ve:b=w.length/4;const M=new Float32Array(b*4);for(let _=0;_<b;_++)m(w,_*4,M,_*4);S=M,A=ve;break;case $t:b=w.length/4;const E=new Uint16Array(b*4);for(let _=0;_<b;_++)p(w,_*4,E,_*4);S=E,A=$t;break;default:throw new Error("THREE.RGBELoader: Unsupported type: "+this.type)}return{width:z,height:F,data:S,header:g.string,gamma:g.gamma,exposure:g.exposure,type:A}}setDataType(t){return this.type=t,this}load(t,e,i,s){function n(r,h){switch(r.type){case ve:case $t:r.colorSpace=Qt,r.minFilter=mt,r.magFilter=mt,r.generateMipmaps=!1,r.flipY=!0;break}e&&e(r,h)}return super.load(t,n,i,s)}}let Pe;const Ss=[],Tn={init(){this.el.sceneEl.addEventListener("arReady",()=>{Pe=this.el.renderer;for(const d of Ss)d(Pe)},{once:!0})}};function En(d){console.log("RendererInitialized"),Pe?d(Pe):Ss.push(d)}En(As);function As(d){const t=new mn(d),e=document.querySelector("a-scene").object3D;new Fn().load("/custom_card_assets/NarrowPath_Blur.hdr",function(s){const n=t.fromEquirectangular(s).texture;s.dispose(),e.environment=n})}const vn={schema:{customState:{default:!1,type:"boolean"}},init(){const d=this.el.sceneEl,t=new THREE.WebGLRenderer({alpha:!0,antialias:!0,lights:!0});As(t),d.addEventListener("arReady",()=>{d.camera.updateProjectionMatrix()}),document.getElementById("ar-effect-canvas")},update(d){const{data:t}=this;AFRAME.utils.diff(t,d)}},Ee=2e3;function Cn(){window.addEventListener("resize",oi),oi(),screen.orientation.addEventListener("change",oi);function d(){const t=document.getElementById("video-canvas");t&&Rn(t),requestAnimationFrame(d)}requestAnimationFrame(d)}function oi(){const{clientWidth:d,clientHeight:t}=document.body,e=document.getElementById("ar-effect-canvas"),i=document.getElementById("video-canvas");let s,n;const r=d/t;r>1?(n=Ee,s=Math.round(r*Ee)):(s=Ee,n=Math.round(Ee/r)),e&&(e.width=s,e.height=n),i&&(i.width=s,i.height=n)}function Rn(d){const t=document.getElementById("ar-scene"),e=t==null?void 0:t.getElementsByTagName("video")[0];if(!t||!e)return;const i=window.innerWidth,s=window.innerHeight;let n,r;const h=e.videoWidth/e.videoHeight,a=i/s;h>a?(r=s,n=r*h):(n=i,r=n/h);const o=e.videoWidth,l=e.videoHeight,c=Math.round((n-i)/2/n*o*1e3)/1e3,u=Math.round((r-s)/2/r*l*1e3)/1e3,f=Math.round(i/n*o*1e3)/1e3,m=Math.round(s/r*l*1e3)/1e3,[p,y]=[d.width,d.height],g=d.getContext("2d",{willReadFrequently:!0});g==null||g.drawImage(e,c,u,f,m,0,0,p,y)}const hs=new An,di=new W,ke={};function Bn(d){di.x=d.clientX/window.innerWidth*2-1,di.y=-(d.clientY/window.innerHeight)*2+1,Object.keys(ke).length!==0&&window.requestAnimationFrame(Fs)}function Fs(){var s;let d;for(const n of document.querySelector("a-camera").object3D.children)if(n.isCamera){d=n,d.isPerspectiveCamera=!0;break}if(!d){window.requestAnimationFrame(Fs);return}hs.setFromCamera(di,d);const t=document.querySelector("a-scene").object3D,e={},i=hs.intersectObjects(t.children);for(let n=0;n<i.length;n++){const r=i[n].object,h=r.el;h&&(e[h.id]=r)}for(const n of Object.keys(e))(s=ke[n])==null||s.call(ke,e[n])}function kn(){window.addEventListener("pointerdown",Bn)}const In=["card-front","card-back"];function ls(d,t="animation-controller"){if(!In.includes(d))throw new Error(`Unsupported image target: ${d}`);const e=document.getElementById(d);e.addEventListener("targetFound",i=>{console.log("Target Found:",d);const s=e.querySelector("a-gltf-model");s?(console.log("Model element found:",s.id),console.log("Model source:",s.getAttribute("src")),console.log("Model visibility:",s.getAttribute("visible"))):console.log("No model element found in target"),Dn(d,t)}),e.addEventListener("targetLost",i=>{console.log("Target Lost:",d),Pn(d,t)})}function Dn(d,t){const e=document.getElementById(d);console.log("Setting target present for:",d),e.setAttribute(t,{imageTargetFound:!0,imageTargetPresent:!0});const i=e.querySelector("a-gltf-model");i&&(i.setAttribute("visible",!0),console.log("Made model visible"))}function Pn(d,t){const e=document.getElementById(d);console.log("Setting target lost for:",d),e.setAttribute(t,{imageTargetPresent:!1})}AFRAME.registerComponent("animation-controller",Ts);AFRAME.registerComponent("renderer-provider",Tn);AFRAME.registerComponent("free-scene-render",vn);const On=document.querySelector("a-scene");On.addEventListener("arReady",()=>{console.log("AR Ready"),Cn(),ls("card-front"),ls("card-back"),kn()},{once:!0});let hi;window.addEventListener("resize",()=>{hi&&clearTimeout(hi),hi=setTimeout(()=>{const t=document.querySelector("a-scene").systems["mindar-image-system"];t&&t.el.sceneEl.isPlaying&&(t.stop(),setTimeout(()=>{t.start()},100))},500)});
